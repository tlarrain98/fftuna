{"version":3,"sources":["images/zucc.png","UserContext.js","components/posts/LikeDislike.js","components/posts/PostPreview.js","components/posts/PrevNext.js","components/posts/PostList.js","components/home/StandingEntry.js","components/home/SideStandings.js","constants.js","components/charlieformula/CharlieFormula.js","components/posts/PostForm.js","components/posts/CreatePost.js","components/profile/EditProfile.js","components/profile/MyProfile.js","components/home/Home.js","components/LogoutButton.js","components/TunaNavBar.js","components/weeklyrecap/WeeklyRecap.js","components/charlieformula/CharlieFormulaPage.js","components/teams/players/Player.js","components/teams/players/Roster.js","components/teams/TeamPage.js","components/teams/TeamPreview.js","components/teams/TeamList.js","components/teams/TeamSeasonWeek.js","components/teams/TeamHandler.js","components/landingpages/LoginButton.js","components/landingpages/SignUpButton.js","components/landingpages/Landing.js","components/SetUsername.js","components/comments/CommentForm.js","components/comments/DeleteComment.js","components/comments/Comment.js","components/comments/CommentList.js","components/posts/DeletePost.js","components/posts/Post.js","components/records/Records.js","components/profile/UserPosts.js","components/profile/ProfileComment.js","components/profile/UserComments.js","components/profile/ShowProfile.js","components/ContentHandler.js","App.js","index.js","images/medovote.png","images/hoffvote.png"],"names":["module","exports","UserContext","createContext","LikeDislike","props","useState","score","setScore","lod","setLod","userProfile","useContext","useEffect","post","likes","dislikes","checkLikes","like_user_id","includes","uid","console","log","dislike_user_id","handleLikes","removeLike","addLike","removeDislike","handleDislikes","addDislike","data","offset","pid","axios","put","then","res","catch","err","className","src","hoff","alt","onClick","medo","PostPreview","goPost","title","goProfile","user_id","author","body","replace","length","substring","displayBody","PrevNext","window","scrollTo","numPosts","postsPerPage","pagination","setPagination","PostList","posts","setPosts","empty","setEmpty","error","setError","getPostData","refresh","get","params","pageName","list","zucc","i","push","key","getPostPreviews","StandingEntry","name","wins","losses","ffClient","Client","leagueId","process","SideStandings","setData","getData","a","getTeamsAtWeek","seasonId","scoringPeriodId","response","standings","ordered","team","Object","entries","playoffSeed","getOrder","displayStandings","CharlieFormula","getScores","week","setMagic","getBoxscoreForWeek","matchupPeriodId","homeScore","cfHandler","scores","leagueAverages","this","getLeaguePositionAverages","teamAverages","getTeamPositionAverages","multipliers","getMultipliers","teamRatios","getTeamRatio","teamAddedRatios","addRatios","teamId","total","qb","rb","wr","te","dst","k","count","avg","positionMult","qbCount","teCount","dstCount","kCount","teamCount","qbTotal","rbTotal","wrTotal","teTotal","dstTotal","kTotal","teamTotal","awayScore","j","awayRoster","position","totalPoints","player","defaultPosition","homeRoster","awayTeamId","homeTeamId","PostForm","setCount","Form","Group","Label","Control","type","id","placeholder","onChange","document","getElementById","value","trim","as","rows","handleSubmit","handleCancel","CreatePost","create","setCreate","show","setShow","warning","setWarning","success","setSuccess","username","page","isError","handleRefresh","Alert","variant","onClose","dismissible","EditProfile","setUserProfile","bio","email","setEdit","status","saveProfile","MyProfile","edit","Home","setNumPosts","setRefresh","getNumPosts","LogoutButton","logout","useAuth0","Nav","Link","size","goLanding","TunaNavBar","Navbar","expand","Brand","goHome","goCharlie","goWeekly","goTeams","Item","WeeklyRecap","showCreatePost","CharlieFormulaPage","Player","fullName","proTeamAbbreviation","Roster","qbs","players","getQBs","rbs","getRBs","wrs","getWRs","tes","eligiblePositions","getTEs","getDSTs","ks","getKs","TeamPage","formatPoints","points","toString","indexOf","setTeam","season","logoURL","abbreviation","regularSeasonPointsFor","regularSeasonPointsAgainst","roster","TeamPreview","pf","pa","TeamList","teams","showTeams","TeamSeasonWeek","defaultValue","seasonID","setSID","scoringPeriod","setSP","TeamHandler","SID","SP","loading","setLoading","LoginButton","loginWithRedirect","SignUpButton","screen_hint","Landing","isAuthenticated","isLoading","user","goSetUsername","SetUsername","Modal","Header","Title","Body","Footer","Button","check","CommentForm","alertText","setAlertText","showWarning","setShowWarning","showSuccess","setShowSuccess","commentText","comment","postComment","DeleteComment","message","setMessage","onHide","handleClose","closeButton","cid","delete","handleDelete","showDeleting","Comment","handleShow","showDelete","date","year","formatDate","date_created","CommentList","comments","setComments","setIsError","getComments","showComments","DeletePost","Post","setPost","getPost","Records","UserPosts","getUserPosts","ProfileComment","post_id","UserComments","getUserComments","ShowProfile","profile","setProfile","getUser","last_login","getDates","ContentHandler","setPage","setPid","setUid","pageId","goRecords","userId","showNavBar","App","Provider","ReactDOM","render","domain","clientId","redirectUri","location","origin"],"mappings":"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","file":"static/js/main.24add3d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zucc.0606e454.png\";","import { createContext } from 'react'\r\n\r\n// keeps track of user profile context\r\nexport const UserContext = createContext(null);","import React, { useState, useEffect, useContext } from 'react'\r\nimport '../../css/LikeDislike.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport axios from 'axios'\r\nimport medo from '../../images/medovote.png'\r\nimport hoff from '../../images/hoffvote.png'\r\n\r\nconst LikeDislike = (props) => {\r\n\r\n    const [score, setScore] = useState(0); // displays score\r\n    const [lod, setLod] = useState(0); // keeps track of whether use has liked or disliked post\r\n    const { userProfile } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        setScore(props.post.likes - props.post.dislikes);\r\n        checkLikes();\r\n    }, [])\r\n\r\n    const checkLikes = () => {\r\n        if (props.post) {\r\n            if (props.post.like_user_id.includes(userProfile.uid)) {\r\n                console.log(\"liked!!!!!!!!\")\r\n                setLod(1);\r\n            }\r\n            else if (props.post.dislike_user_id.includes(userProfile.uid)) {\r\n                console.log(\"dislikeeeeeeeeeeeeee\")\r\n                setLod(-1);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // if already liked, remove like, else add like\r\n    const handleLikes = () => {\r\n        if (lod === 1) { // already liked, remove like\r\n            removeLike();\r\n            setLod(0);\r\n            setScore(score - 1);\r\n        }\r\n        else if (lod === 0) { // no likes or dislikes, add like\r\n            addLike();\r\n            setLod(1);\r\n            setScore(score + 1);\r\n        }\r\n        else { // was disliked, remove dislike and add like\r\n            removeDislike();\r\n            addLike();\r\n            setLod(1);\r\n            setScore(score + 2);\r\n        }\r\n    }\r\n\r\n    const handleDislikes = () => {\r\n        if (lod === -1) { // if already disliked, remove dislike\r\n            removeDislike();\r\n            setLod(0);\r\n            setScore(score + 1);\r\n        }\r\n        else if (lod === 0) { // no likes or dislikes, add dislike\r\n            addDislike();\r\n            setLod(-1);\r\n            setScore(score - 1);\r\n        }\r\n        else { // was liked, remove like and add dislike\r\n            removeLike();\r\n            addDislike();\r\n            setLod(-1);\r\n            setScore(score - 2);\r\n        }\r\n    }\r\n\r\n    // these 4 functions are used to add/remove likes/dislikes from the post\r\n    const addLike = () => {\r\n        let data = {\r\n            uid: userProfile.uid,\r\n            offset: 1,\r\n            pid: props.post.pid\r\n        }\r\n        axios.put('/api/put/likes', data)\r\n            .then(res => {\r\n                // console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const removeLike = () => {\r\n        let data = {\r\n            uid: userProfile.uid,\r\n            offset: -1,\r\n            pid: props.post.pid\r\n        }\r\n        axios.put('/api/put/likes', data)\r\n            .then(res => {\r\n                // console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const addDislike = () => {\r\n        let data = {\r\n            uid: userProfile.uid,\r\n            offset: 1,\r\n            pid: props.post.pid\r\n        }\r\n        axios.put('/api/put/dislikes', data)\r\n            .then(res => {\r\n                // console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const removeDislike = () => {\r\n        let data = {\r\n            uid: userProfile.uid,\r\n            offset: -1,\r\n            pid: props.post.pid\r\n        }\r\n        axios.put('/api/put/dislikes', data)\r\n            .then(res => {\r\n                // console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const displayLikeDislike = () => {\r\n        // not liked or disliked\r\n        if (lod == 0) {\r\n            return (\r\n                <div className=\"ldWrapper\">\r\n                    <img src={hoff} alt=\"like\" className=\"up\" onClick={() => handleLikes()} />\r\n                    <div className=\"score\">{score}</div>\r\n                    <img src={medo} alt=\"dislike\" className=\"down\" onClick={() => handleDislikes()} />\r\n                </div>\r\n            )\r\n        }\r\n        // user has liked\r\n        else if (lod == 1) {\r\n            return (\r\n                <div className=\"ldWrapper\">\r\n                    <img src={hoff} alt=\"like\" className=\"upHigh\" onClick={() => handleLikes()} />\r\n                    <div className=\"score\">{score}</div>\r\n                    <img src={medo} alt=\"dislike\" className=\"down\" onClick={() => handleDislikes()} />\r\n                </div>\r\n            )\r\n        }\r\n        // user has disliked\r\n        else if (lod == -1) {\r\n            return (\r\n                <div className=\"ldWrapper\">\r\n                    <img src={hoff} alt=\"like\" className=\"up\" onClick={() => handleLikes()} />\r\n                    <div className=\"score\">{score}</div>\r\n                    <img src={medo} alt=\"dislike\" className=\"downHigh\" onClick={() => handleDislikes()} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return <>{displayLikeDislike()}</>\r\n\r\n}\r\n\r\nexport default LikeDislike","import React from 'react'\r\nimport '../../css/PostPreview.css'\r\nimport LikeDislike from './LikeDislike'\r\n\r\nconst PostPreview = (props) => {\r\n\r\n    // cut off long bodies so that the preview isn't too big\r\n    const displayBody = () => {\r\n        let body = props.post.body;\r\n        if (body) {\r\n            body.replace(/[\\r\\n]+/g, \" \"); // newlines are only counted as one character so we need to\r\n            if (body.length > 355) {        // replace them with spaces so that the card isn't too long\r\n                body = body.substring(0, 350);\r\n                body += '...'\r\n            }\r\n        }\r\n\r\n        return body\r\n    }\r\n\r\n    return (\r\n        <div className=\"previewWrapper\">\r\n            <LikeDislike post={props.post} />\r\n            <div className=\"previewContent\">\r\n                <div className=\"previewTitle\" onClick={() => props.goPost(props.post.pid)}>\r\n                    {props.post.title}\r\n                </div>\r\n                <div className=\"previewAuthor\"\r\n                    onClick={() => props.goProfile(props.post.user_id)}>\r\n                    {props.post.author}\r\n                </div>\r\n                <div className=\"previewBody\">{displayBody()}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPreview","import React, { useEffect } from 'react'\r\nimport '../../css/PostList.css'\r\n\r\n// displays \"previous\" and \"next\" buttons below the post list\r\nconst PrevNext = (props) => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0); // not working for whatever reason\r\n    })\r\n\r\n    // if all the posts fit on one page, return nothing\r\n    if (props.numPosts <= props.postsPerPage) {\r\n        return <></>\r\n    }\r\n    // show prev but not next if on last page\r\n    else if (props.pagination * props.postsPerPage > props.numPosts) {\r\n        return (\r\n            <div className=\"prevnext\">\r\n                <div className=\"prev\" onClick={() => props.setPagination(props.pagination - 1)}>Previous page</div>\r\n            </div>\r\n        )\r\n    }\r\n    // if on the most current page, don't show prev\r\n    else if (props.pagination === 1) {\r\n        return (\r\n            <div className=\"prevnext\">\r\n                <div className=\"next\" onClick={() => props.setPagination(props.pagination + 1)}>Next page</div>\r\n            </div>\r\n        )\r\n    }\r\n    // any other case, show both\r\n    else {\r\n        return (\r\n            <div className=\"prevnext\">\r\n                <div className=\"prev\" onClick={() => props.setPagination(props.pagination - 1)}>Previous page</div>\r\n                &emsp;\r\n                <div className=\"next\" onClick={() => props.setPagination(props.pagination + 1)}>Next page</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrevNext","import React, { useEffect, useState } from 'react'\r\nimport '../../css/PostList.css'\r\nimport PostPreview from './PostPreview'\r\nimport PrevNext from './PrevNext'\r\nimport axios from 'axios'\r\nimport zucc from '../../images/zucc.png'\r\n\r\nconst PostList = (props) => {\r\n\r\n    const [pagination, setPagination] = useState(1); // keeps track of the page #\r\n    const [posts, setPosts] = useState(null); // used for post data\r\n    const [empty, setEmpty] = useState(false); // if no posts returned\r\n    const [error, setError] = useState(false); // displays error\r\n\r\n    // on page change, scroll to top and get data for page\r\n    useEffect(() => {\r\n        getPostData();\r\n    }, [pagination, props.refresh])\r\n\r\n    // set the post data for the current page\r\n    const getPostData = () => {\r\n        axios.get('/api/get/postsfromdb', {\r\n            params: {\r\n                offset: (pagination - 1) * props.postsPerPage,\r\n                postsPerPage: props.postsPerPage,\r\n                pageName: props.pageName\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (res.data.length) {\r\n                    setPosts(res.data);\r\n                    setEmpty(false);\r\n                }\r\n                else {\r\n                    setEmpty(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setError(true);\r\n                console.log(\"error: \" + error);\r\n            })\r\n    }\r\n\r\n    // returns a list of all the post preview components for the page\r\n    const getPostPreviews = () => {\r\n        let list = [];\r\n        if (error) {\r\n            return(\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"plZucc\" />\r\n                    <div className=\"plError\">Error loading post list, please refresh.</div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (posts == null && !empty) {\r\n            return <div>Loading...</div>\r\n        }\r\n        else if (posts !== null) {\r\n            for (let i = 0; i < posts.length; i++) {\r\n                list.push(\r\n                    <PostPreview key={i}\r\n                        post={posts[i]}\r\n                        goPost={props.goPost}\r\n                        goProfile={props.goProfile} />\r\n                )\r\n            }\r\n        }\r\n        else if (empty) {\r\n            return <div className=\"noPosts\">No posts.</div>\r\n        }\r\n\r\n        return list\r\n    }\r\n\r\n    return (\r\n        <div className=\"postListWrapper\">\r\n            {getPostPreviews()}\r\n            <PrevNext numPosts={props.numPosts}\r\n                postsPerPage={props.postsPerPage}\r\n                pagination={pagination}\r\n                setPagination={setPagination} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React from 'react';\r\nimport '../../css/SideStandings.css';\r\n\r\nconst StandingEntry = (props) => {\r\n    return (\r\n        <tr className=\"trTeam\">\r\n            <td className=\"tdTeam\">{props.name}</td>\r\n            <td className=\"tdW\">{props.wins}</td>\r\n            <td className=\"tdL\">{props.losses}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default StandingEntry;","import React, { useState, useEffect } from 'react';\r\nimport StandingEntry from './StandingEntry.js';\r\nimport '../../css/SideStandings.css';\r\nimport { Client } from 'espn-fantasy-football-api/node';\r\nimport * as Constants from '../../constants'\r\n\r\nconst ffClient = new Client({ leagueId: Constants.LEAGUE_ID });\r\n\r\nconst SideStandings = () => {\r\n    \r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n\r\n    // get league data on every team\r\n    const getData = async () => {\r\n        // 18 gets the week that was last played\r\n        const response = await ffClient.getTeamsAtWeek({ \r\n            seasonId: Constants.SEASON_ID, scoringPeriodId: 18\r\n        });\r\n        setData(response);\r\n    }\r\n\r\n    // orders the list of teams by record\r\n    const getOrder = () => {\r\n        let ordered = [];\r\n\r\n        for (const team in Object.entries(data)) {\r\n            ordered[data[team].playoffSeed - 1] = data[team];\r\n        }\r\n\r\n        return ordered;\r\n    }\r\n\r\n    // displays standings\r\n    const displayStandings = () => {\r\n\r\n        // display loading\r\n        if (!data) {\r\n            return <div className=\"loadingStandings\">Loading...</div>\r\n        }\r\n        let standings = [];\r\n        let ordered = getOrder(); // find order by record\r\n        for (let i = 0; i < ordered.length; i++) {\r\n            standings.push(\r\n                <StandingEntry key={i}\r\n                    name={ordered[i].name}\r\n                    wins={ordered[i].wins}\r\n                    losses={ordered[i].losses} />\r\n            )\r\n        }\r\n\r\n        return standings;\r\n    }\r\n\r\n    return (\r\n        <div className=\"standingsWrapper\">\r\n            <div className=\"lsHeader\">League Standings</div>\r\n            <table className=\"sideTable\">\r\n                <thead className=\"thead\">\r\n                    <tr className=\"trHeader\">\r\n                        <th className=\"thTeam\">Team</th>\r\n                        <th className=\"thW\">W</th>\r\n                        <th className=\"thL\">L</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"tbody\">\r\n                    {displayStandings()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideStandings;","// espn league id\r\nexport const LEAGUE_ID = process.env.REACT_APP_LEAGUE_ID;\r\n\r\n// season id\r\nexport const SEASON_ID = process.env.REACT_APP_SEASON_ID;","import * as Constants from '../../constants'\r\nimport { Client } from 'espn-fantasy-football-api/node';\r\n\r\nconst ffClient = new Client({ leagueId: Constants.LEAGUE_ID });\r\n\r\nclass CharlieFormula {\r\n\r\n    // used in PostForm.js to generate values into the form\r\n    getScores = function (week, setMagic) {\r\n\r\n        ffClient.getBoxscoreForWeek({\r\n            seasonId: Constants.SEASON_ID, matchupPeriodId: week, scoringPeriodId: week\r\n        })\r\n            .then(response => {\r\n                if (response[0].homeScore === 0) {\r\n                    // do nothing\r\n                }\r\n                else {\r\n                    setMagic(response);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    cfHandler = function (scores) {\r\n        // console.log(scores)\r\n        let leagueAverages = this.getLeaguePositionAverages(scores);\r\n        let teamAverages = this.getTeamPositionAverages(scores);\r\n        let multipliers = this.getMultipliers(leagueAverages);\r\n        let teamRatios = this.getTeamRatio(leagueAverages, teamAverages, multipliers);\r\n        let teamAddedRatios = this.addRatios(teamRatios);\r\n\r\n        console.log(\"league averages\")\r\n        console.log(leagueAverages);\r\n        console.log(\"team averages\")\r\n        console.log(teamAverages[1]);\r\n        console.log(\"multipliers\")\r\n        console.log(multipliers);\r\n        console.log(\"team ratios\")\r\n        console.log(teamRatios[0]);\r\n        console.log(\"team added ratios\")\r\n        console.log(teamAddedRatios[0]);\r\n    }\r\n\r\n    addRatios = function (teamRatios) {\r\n        let teamAddedRatios = []\r\n        for (let i = 0; i < teamRatios.length; i++) {\r\n            teamAddedRatios[i] = {\r\n                teamId: teamRatios[i].teamId,\r\n                total: (teamRatios[i].qb + teamRatios[i].rb\r\n                        + teamRatios[i].wr + teamRatios[i].te + teamRatios[i].dst\r\n                        + teamRatios[i].k)\r\n            }\r\n        }\r\n\r\n        return teamAddedRatios;\r\n    }\r\n\r\n    getTeamRatio = function (leagueAverages, teamAverages, multipliers) {\r\n\r\n        let teamRatios = []; // each team's charlie ratio per position\r\n        let count = 0; // used to keep track of index for teamPositionRatios\r\n\r\n        for (let i = 0; i < teamAverages.length; i++) {\r\n            if (!teamAverages[i]) {\r\n                continue;\r\n            }\r\n            teamRatios[count] = {\r\n                teamId: i,\r\n                qb: teamAverages[i].qb.avg / leagueAverages.qb,\r\n                rb: teamAverages[i].rb.avg / leagueAverages.rb,\r\n                wr: teamAverages[i].wr.avg / leagueAverages.wr,\r\n                te: teamAverages[i].te.avg / leagueAverages.te,\r\n                dst: teamAverages[i].dst.avg / leagueAverages.dst,\r\n                k: teamAverages[i].k.avg / leagueAverages.k,\r\n            }\r\n            count++;\r\n        }\r\n\r\n        // apply multipliers\r\n        for (let i = 0; i < teamRatios.length; i++) {\r\n            // console.log(teamRatios[i].qb *= multipliers.qb);\r\n            teamRatios[i].qb *= multipliers.qb\r\n            teamRatios[i].rb *= multipliers.rb\r\n            teamRatios[i].wr *= multipliers.wr\r\n            teamRatios[i].te *= multipliers.te\r\n            teamRatios[i].dst *= multipliers.dst\r\n            teamRatios[i].k *= multipliers.k\r\n        }\r\n\r\n        return teamRatios\r\n    }\r\n\r\n    getMultipliers = function (leagueAverages) {\r\n        let positionMult = {\r\n            qb: 0, rb: 0, wr: 0,\r\n            te: 0, dst: 0, k: 0\r\n        }\r\n\r\n        positionMult.qb = leagueAverages.qb / leagueAverages.team;\r\n        positionMult.te = leagueAverages.te / leagueAverages.team;\r\n        positionMult.dst = leagueAverages.dst / leagueAverages.team;\r\n        positionMult.k = leagueAverages.k / leagueAverages.team;\r\n        positionMult.rb = leagueAverages.rb / leagueAverages.team;\r\n        positionMult.wr = leagueAverages.wr / leagueAverages.team;\r\n\r\n        return positionMult;\r\n    }\r\n\r\n    // calculate average points scored for each position in a week\r\n    getLeaguePositionAverages = function (scores) {\r\n        // used to keep track of how many times each position was started\r\n        let qbCount = 0;\r\n        let rbCount = 0;\r\n        let wrCount = 0;\r\n        let teCount = 0;\r\n        let dstCount = 0;\r\n        let kCount = 0;\r\n        let teamCount = 0;\r\n\r\n        // used to keep track of total points scored per position\r\n        let qbTotal = 0.0;\r\n        let rbTotal = 0.0;\r\n        let wrTotal = 0.0;\r\n        let teTotal = 0.0;\r\n        let dstTotal = 0.0;\r\n        let kTotal = 0.0;\r\n        let teamTotal = 0.0;\r\n\r\n        // iterates through each matchup and gets totals\r\n        for (let i = 0; i < scores.length; i++) {\r\n            // to find average team score\r\n            teamCount += 2;\r\n            teamTotal += scores[i].awayScore;\r\n            teamTotal += scores[i].homeScore;\r\n\r\n            // for away team\r\n            for (let j = 0; j < scores[i].awayRoster.length; j++) {\r\n                // just skip bench players\r\n                if (scores[i].awayRoster[j].position !== \"Bench\") {\r\n                    if (scores[i].awayRoster[j].position === \"QB\") {\r\n                        qbCount++;\r\n                        qbTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"RB\") {\r\n                        rbCount++;\r\n                        rbTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"WR\") {\r\n                        wrCount++;\r\n                        wrTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"TE\") {\r\n                        teCount++;\r\n                        teTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"D/ST\") {\r\n                        dstCount++;\r\n                        dstTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"K\") {\r\n                        kCount++;\r\n                        kTotal += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    // flex players\r\n                    if (scores[i].awayRoster[j].position === \"RB/WR/TE\") {\r\n                        // if rb\r\n                        if (scores[i].awayRoster[j].player.defaultPosition === \"RB\") {\r\n                            rbCount++;\r\n                            rbTotal += scores[i].awayRoster[j].totalPoints;\r\n                        }\r\n                        // if wr or te, add it to receiver\r\n                        else {\r\n                            wrCount++;\r\n                            wrTotal += scores[i].awayRoster[j].totalPoints;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // for home team\r\n            for (let j = 0; j < scores[i].homeRoster.length; j++) {\r\n                // just skip bench players\r\n                if (scores[i].homeRoster[j].position !== \"Bench\") {\r\n                    if (scores[i].homeRoster[j].position === \"QB\") {\r\n                        qbCount++;\r\n                        qbTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"RB\") {\r\n                        rbCount++;\r\n                        rbTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"WR\") {\r\n                        wrCount++;\r\n                        wrTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"TE\") {\r\n                        teCount++;\r\n                        teTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"D/ST\") {\r\n                        dstCount++;\r\n                        dstTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"K\") {\r\n                        kCount++;\r\n                        kTotal += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    // flex players\r\n                    if (scores[i].homeRoster[j].position === \"RB/WR/TE\") {\r\n                        // if rb\r\n                        if (scores[i].homeRoster[j].player.defaultPosition === \"RB\") {\r\n                            rbCount++;\r\n                            rbTotal += scores[i].homeRoster[j].totalPoints;\r\n                        }\r\n                        // if wr or te, add it to receiver\r\n                        else {\r\n                            wrCount++;\r\n                            wrTotal += scores[i].homeRoster[j].totalPoints;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let averages = {\r\n            qb: qbTotal / qbCount,\r\n            rb: rbTotal / (scores.length * 2),\r\n            wr: wrTotal / (scores.length * 2),\r\n            te: teTotal / teCount,\r\n            dst: dstTotal / dstCount,\r\n            k: kTotal / kCount,\r\n            team: teamTotal / teamCount\r\n        }\r\n\r\n        return averages;\r\n    }\r\n\r\n    getTeamPositionAverages = function (scores) {\r\n\r\n        let teamAverages = [];\r\n        // iterates through each matchup and gets totals\r\n        for (let i = 0; i < scores.length; i++) {\r\n            teamAverages[scores[i].awayTeamId] = {\r\n                qb: { count: 0, total: 0, avg: 0 },\r\n                rb: { count: 0, total: 0, avg: 0 },\r\n                wr: { count: 0, total: 0, avg: 0 },\r\n                te: { count: 0, total: 0, avg: 0 },\r\n                dst: { count: 0, total: 0, avg: 0 },\r\n                k: { count: 0, total: 0, avg: 0 },\r\n            }\r\n            teamAverages[scores[i].homeTeamId] = {\r\n                qb: { count: 0, total: 0, avg: 0 },\r\n                rb: { count: 0, total: 0, avg: 0 },\r\n                wr: { count: 0, total: 0, avg: 0 },\r\n                te: { count: 0, total: 0, avg: 0 },\r\n                dst: { count: 0, total: 0, avg: 0 },\r\n                k: { count: 0, total: 0, avg: 0 },\r\n            }\r\n            // for away team\r\n            for (let j = 0; j < scores[i].awayRoster.length; j++) {\r\n                // just skip bench players\r\n                if (scores[i].awayRoster[j].position !== \"Bench\") {\r\n                    if (scores[i].awayRoster[j].position === \"QB\") {\r\n                        teamAverages[scores[i].awayTeamId].qb.count++;\r\n                        teamAverages[scores[i].awayTeamId].qb.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"RB\") {\r\n                        teamAverages[scores[i].awayTeamId].rb.count++;\r\n                        teamAverages[scores[i].awayTeamId].rb.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"WR\") {\r\n                        teamAverages[scores[i].awayTeamId].wr.count++;\r\n                        teamAverages[scores[i].awayTeamId].wr.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"TE\") {\r\n                        teamAverages[scores[i].awayTeamId].te.count++;\r\n                        teamAverages[scores[i].awayTeamId].te.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"D/ST\") {\r\n                        teamAverages[scores[i].awayTeamId].dst.count++;\r\n                        teamAverages[scores[i].awayTeamId].dst.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].awayRoster[j].position === \"K\") {\r\n                        teamAverages[scores[i].awayTeamId].k.count++;\r\n                        teamAverages[scores[i].awayTeamId].k.total += scores[i].awayRoster[j].totalPoints;\r\n                    }\r\n                    // flex players\r\n                    if (scores[i].awayRoster[j].position === \"RB/WR/TE\") {\r\n                        // if rb\r\n                        if (scores[i].awayRoster[j].player.defaultPosition === \"RB\") {\r\n                            teamAverages[scores[i].awayTeamId].rb.count++;\r\n                            teamAverages[scores[i].awayTeamId].rb.total += scores[i].awayRoster[j].totalPoints;\r\n                        }\r\n                        // if wr or te, add it to receiver\r\n                        else {\r\n                            teamAverages[scores[i].awayTeamId].wr.count++;\r\n                            teamAverages[scores[i].awayTeamId].wr.total += scores[i].awayRoster[j].totalPoints;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // for home team\r\n            for (let j = 0; j < scores[i].homeRoster.length; j++) {\r\n                // just skip bench players\r\n                if (scores[i].homeRoster[j].position !== \"Bench\") {\r\n                    if (scores[i].homeRoster[j].position === \"QB\") {\r\n                        teamAverages[scores[i].homeTeamId].qb.count++;\r\n                        teamAverages[scores[i].homeTeamId].qb.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"RB\") {\r\n                        teamAverages[scores[i].homeTeamId].rb.count++;\r\n                        teamAverages[scores[i].homeTeamId].rb.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"WR\") {\r\n                        teamAverages[scores[i].homeTeamId].wr.count++;\r\n                        teamAverages[scores[i].homeTeamId].wr.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"TE\") {\r\n                        teamAverages[scores[i].homeTeamId].te.count++;\r\n                        teamAverages[scores[i].homeTeamId].te.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"D/ST\") {\r\n                        teamAverages[scores[i].homeTeamId].dst.count++;\r\n                        teamAverages[scores[i].homeTeamId].dst.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    if (scores[i].homeRoster[j].position === \"K\") {\r\n                        teamAverages[scores[i].homeTeamId].k.count++;\r\n                        teamAverages[scores[i].homeTeamId].k.total += scores[i].homeRoster[j].totalPoints;\r\n                    }\r\n                    // flex players\r\n                    if (scores[i].homeRoster[j].position === \"RB/WR/TE\") {\r\n                        // if rb\r\n                        if (scores[i].homeRoster[j].player.defaultPosition === \"RB\") {\r\n                            teamAverages[scores[i].homeTeamId].rb.count++;\r\n                            teamAverages[scores[i].homeTeamId].rb.total += scores[i].homeRoster[j].totalPoints;\r\n                        }\r\n                        // if wr or te, add it to receiver\r\n                        else {\r\n                            teamAverages[scores[i].homeTeamId].wr.count++;\r\n                            teamAverages[scores[i].homeTeamId].wr.total += scores[i].homeRoster[j].totalPoints;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // away team averages\r\n            teamAverages[scores[i].awayTeamId].qb.avg = (\r\n                teamAverages[scores[i].awayTeamId].qb.total / teamAverages[scores[i].awayTeamId].qb.count\r\n            )\r\n            teamAverages[scores[i].awayTeamId].rb.avg = (\r\n                teamAverages[scores[i].awayTeamId].rb.total / teamAverages[scores[i].awayTeamId].rb.count\r\n            )\r\n            teamAverages[scores[i].awayTeamId].wr.avg = (\r\n                teamAverages[scores[i].awayTeamId].wr.total / teamAverages[scores[i].awayTeamId].wr.count\r\n            )\r\n            teamAverages[scores[i].awayTeamId].te.avg = (\r\n                teamAverages[scores[i].awayTeamId].te.total / teamAverages[scores[i].awayTeamId].te.count\r\n            )\r\n            teamAverages[scores[i].awayTeamId].dst.avg = (\r\n                teamAverages[scores[i].awayTeamId].dst.total / teamAverages[scores[i].awayTeamId].dst.count\r\n            )\r\n            teamAverages[scores[i].awayTeamId].k.avg = (\r\n                teamAverages[scores[i].awayTeamId].k.total / teamAverages[scores[i].awayTeamId].k.count\r\n            )\r\n            // home team averages\r\n            teamAverages[scores[i].homeTeamId].qb.avg = (\r\n                teamAverages[scores[i].homeTeamId].qb.total / teamAverages[scores[i].homeTeamId].qb.count\r\n            )\r\n            teamAverages[scores[i].homeTeamId].rb.avg = (\r\n                teamAverages[scores[i].homeTeamId].rb.total / teamAverages[scores[i].homeTeamId].rb.count\r\n            )\r\n            teamAverages[scores[i].homeTeamId].wr.avg = (\r\n                teamAverages[scores[i].homeTeamId].wr.total / teamAverages[scores[i].homeTeamId].wr.count\r\n            )\r\n            teamAverages[scores[i].homeTeamId].te.avg = (\r\n                teamAverages[scores[i].homeTeamId].te.total / teamAverages[scores[i].homeTeamId].te.count\r\n            )\r\n            teamAverages[scores[i].homeTeamId].dst.avg = (\r\n                teamAverages[scores[i].homeTeamId].dst.total / teamAverages[scores[i].homeTeamId].dst.count\r\n            )\r\n            teamAverages[scores[i].homeTeamId].k.avg = (\r\n                teamAverages[scores[i].homeTeamId].k.total / teamAverages[scores[i].homeTeamId].k.count\r\n            )\r\n        }\r\n\r\n        return teamAverages;\r\n    }\r\n}\r\n\r\nexport default CharlieFormula","import React, { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport '../../css/PostForm.css'\r\nimport MagicButton from '../charlieformula/MagicButton'\r\nimport CharlieFormula from '../charlieformula/CharlieFormula'\r\n\r\nconst PostForm = (props) => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [magic, setMagic] = useState(); // used to store charlie formula\r\n\r\n    let cf = new CharlieFormula();\r\n\r\n    // once the magic state has been populated, calculate the formula\r\n    // useEffect(() => {\r\n    //     if(magic) {\r\n    //         // console.log(magic);\r\n    //         cf.cfHandler(magic);\r\n    //     }\r\n    // }, [magic])\r\n    \r\n    // trims the title and body text and submits it\r\n    const handleText = () => {\r\n        props.handleSubmit(document.getElementById('title').value.trim(), \r\n            document.getElementById('body').value.trim()); \r\n    }\r\n\r\n    // counts the amount of characters in the title\r\n    const textCounter = () => {\r\n        setCount(document.getElementById('title').value.trim().length);\r\n    }\r\n\r\n    // if on the charlie formula page, show the magic button\r\n    const showMagic = () => {\r\n        if (props.pageName === \"charlie\") {\r\n            return <MagicButton setMagic={setMagic}/>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"formWrapper\">\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    Title <div className=\"charCounter\">{count}/256</div>\r\n                </Form.Label>\r\n                <Form.Control className=\"titleForm\" type=\"text\" id=\"title\" \r\n                    placeholder=\"Enter post title\" onChange={() => textCounter()}/>\r\n                <Form.Label>Body</Form.Label>\r\n                <Form.Control className=\"bodyForm\" \r\n                    as=\"textarea\" id=\"body\" rows={10}/>\r\n                <button className=\"submitButton\" onClick={() => handleText()}>\r\n                    Submit\r\n                </button>\r\n                <button className=\"cancelButton\" onClick={() => props.handleCancel()}>\r\n                    Cancel\r\n                </button>\r\n                {/* {showMagic()} */}\r\n            </Form.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostForm;","import React, { useState, useContext } from 'react'\r\nimport PostForm from './PostForm'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport axios from 'axios'\r\nimport {UserContext} from '../../UserContext'\r\nimport '../../css/Post.css'\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    const [create, setCreate] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [warning, setWarning] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const {userProfile} = useContext(UserContext);\r\n\r\n    const handleCancel = () => {\r\n        setCreate(false);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const data = {\r\n            title: document.getElementById('title').value.trim(),\r\n            body: document.getElementById('body').value.trim(),\r\n            uid: userProfile.uid,\r\n            username: userProfile.username,\r\n            page: props.pageName\r\n        }\r\n\r\n        if(!isError(data)) {\r\n            setShow(false);\r\n            axios.post('/api/post/posttodb', data)\r\n                .then(() => {\r\n                    document.getElementById('title').value = '';\r\n                    document.getElementById('body').value = '';\r\n                    setSuccess(true);\r\n                    setCreate(false);\r\n                    props.handleRefresh();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error: \" + err);\r\n                    setWarning(\"Server error, could not post.\");\r\n                    setShow(true);\r\n                })\r\n        }\r\n        else {\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n    const isError = (data) => {\r\n        if(data.title === '') {\r\n            setWarning(\"Please set your post's title.\");\r\n            return true\r\n        }\r\n        if(data.username === null)  {\r\n            setWarning(\"Username error, please refresh the page.\");\r\n            return true\r\n        }\r\n    }\r\n\r\n    const chooseDisplay = () => {\r\n        if(create) {\r\n            return(\r\n                <PostForm handleCancel={handleCancel} \r\n                    handleSubmit={handleSubmit}\r\n                    pageName={props.pageName}/>\r\n            )\r\n        }\r\n        else {\r\n            return <button className=\"postButton\" onClick={() => setCreate(true)}>Create Post</button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPostWrapper\">\r\n            <Alert className=\"alertWarning\" variant=\"danger\" \r\n                show={show} onClose={() => setShow(false)} dismissible>\r\n            Error: {warning}\r\n            </Alert>\r\n            <Alert className=\"alertSuccess\" variant=\"success\" \r\n                show={success} onClose={() => setSuccess(false)} dismissible>\r\n            Post submitted!\r\n            </Alert>\r\n            {chooseDisplay()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","import React, { useContext, useEffect, useState } from 'react'\r\nimport '../../css/MyProfile.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport axios from 'axios'\r\n\r\nconst EditProfile = (props) => {\r\n\r\n    const { userProfile, setUserProfile } = useContext(UserContext);\r\n    const [warning, setWarning] = useState(null);\r\n    const [count, setCount] = useState(userProfile.username.length);\r\n\r\n    useEffect(() => {\r\n        // set forms to existing values\r\n        if (userProfile) {\r\n            document.getElementById(\"profileUserForm\").value = userProfile.username;\r\n            document.getElementById(\"profileBioForm\").value = userProfile.bio;\r\n        }\r\n    }, [])\r\n\r\n    const saveProfile = () => {\r\n        let data = {\r\n            uid: userProfile.uid,\r\n            username: document.getElementById(\"profileUserForm\").value.trim(),\r\n            bio: document.getElementById(\"profileBioForm\").value.trim()\r\n        }\r\n        // if values are okay, make changes\r\n        if (data.username && data.username.length <= 25) {\r\n            setWarning(null);\r\n            axios.put('/api/put/username', data)\r\n                .then(() => {\r\n                    axios.get('/api/get/userfromdb', {\r\n                        params: { email: userProfile.email }\r\n                    })\r\n                        .then(res => {\r\n                            setUserProfile(res.data[0]);\r\n                            props.setEdit(false);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                            setWarning(\"Server error, please refresh.\");\r\n                        })\r\n                })\r\n                    .catch(err => {\r\n                        if (err.response.status === 500) {\r\n                            setWarning(\"This username has been taken.\");\r\n                        }\r\n                        else {\r\n                            setWarning(\"Server error: please refresh.\");\r\n                        }\r\n                    })\r\n        }\r\n        // else, display warning\r\n        else {\r\n            setWarning(\"Please set username.\");\r\n        }\r\n    }\r\n\r\n    const textCounter = () => {\r\n        setCount(document.getElementById('profileUserForm').value.trim().length);\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileWrapper\">\r\n            <div className=\"profileEdits\">\r\n                <div className=\"profileLabels\">Username: </div>\r\n                <textarea className=\"profileForms\" id=\"profileUserForm\" \r\n                    rows={1} onChange={() => textCounter()}/>\r\n                    <div className=\"profileCounter\">{count}/25</div>\r\n                <div className=\"profileLabels\">Bio: </div>\r\n                <textarea className=\"profileForms\" id=\"profileBioForm\" rows={4} />\r\n            </div>\r\n            <div className=\"profileWarning\">{warning}</div>\r\n            <div className=\"profileButtons\">\r\n                <button className=\"saveProfileButton\" onClick={() => saveProfile()}>\r\n                    Save\r\n                </button>\r\n                <button className=\"cancelProfileButton\" onClick={() => props.setEdit(false)}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile","import React, { useContext, useState, useEffect } from 'react'\r\nimport '../../css/MyProfile.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport axios from 'axios'\r\nimport EditProfile from './EditProfile'\r\n\r\n// used to display user's profile on the home page\r\nconst MyProfile = (props) => {\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const { userProfile, setUserProfile } = useContext(UserContext);\r\n\r\n    const isEdit = () => {\r\n        // if in edit mode\r\n        if (edit) {\r\n            return <EditProfile setEdit={setEdit}/>\r\n        }\r\n        \r\n        // else\r\n        return(\r\n            <div className=\"profileWrapper\">\r\n                <div className=\"username\">\r\n                    <div className=\"username2\" onClick={() => props.goProfile(userProfile.uid)}>\r\n                        {userProfile.username}\r\n                    </div>\r\n                </div>\r\n                <div className=\"userBio\">bio: {userProfile.bio}</div>\r\n                <div className=\"userEdit\" onClick={() => setEdit(true)}>edit profile</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <>{ isEdit() }</>\r\n}\r\n\r\nexport default MyProfile","import React, { useEffect, useState } from 'react'\r\nimport '../../css/Home.css'\r\nimport PostList from '../posts/PostList'\r\nimport SideStandings from './SideStandings'\r\nimport axios from 'axios'\r\nimport CreatePost from '../posts/CreatePost'\r\nimport MyProfile from '../profile/MyProfile'\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const [numPosts, setNumPosts] = useState(0);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getNumPosts();\r\n    }, [])\r\n\r\n    const getNumPosts = () => {\r\n        axios.get('/api/get/numpostsfromdb', null)\r\n            .then(res => {\r\n                setNumPosts(res.data[0].count)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    // sets to true then false to ensure that post list can refresh more than once\r\n    const handleRefresh = () => {\r\n        setRefresh(true);\r\n        setRefresh(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"col1\">\r\n                <div className=\"feedHeader\">\r\n                    <div className=\"feedTitle\">\r\n                        League Feed\r\n                    </div>\r\n                    <div className=\"postButtonWrapper\">\r\n                        <CreatePost handleRefresh={handleRefresh}/>\r\n                    </div>\r\n                </div>\r\n                <PostList goPost={props.goPost}\r\n                    goProfile={props.goProfile}\r\n                    postsPerPage={10}   // posts per page on the league feed\r\n                    numPosts={numPosts} // total number of posts in the database\r\n                    pageName=''\r\n                    refresh={refresh}/>\r\n            </div>\r\n            <div className=\"col2\">\r\n                <MyProfile goProfile={props.goProfile}/>\r\n                <SideStandings />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport '../css/NavBar.css'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\n// navbar button to log the user out\r\nconst LogoutButton = (props) => {\r\n    const { logout } = useAuth0();\r\n\r\n    function logoutHelper() {\r\n        logout();\r\n        props.goLanding();\r\n    }\r\n\r\n    return (\r\n        <Nav.Link size=\"lg\"\r\n            onClick={() => logoutHelper()}>\r\n            Log out\r\n        </Nav.Link>\r\n    )\r\n}\r\n\r\nexport default LogoutButton;","import React from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport '../css/NavBar.css'\r\nimport LogoutButton from './LogoutButton'\r\n\r\n// navigation bar displayed on the top of the page\r\nconst TunaNavBar = (props) => {\r\n    return (\r\n        <Navbar className=\"NavBarContainer\" variant=\"dark\" expand=\"lg\">\r\n            <Nav className=\"container-fluid\">\r\n                <Navbar.Brand className=\"brand\" onClick={props.goHome}>Tuna</Navbar.Brand>\r\n                <Nav.Link className=\"link\" onClick={props.goCharlie}>Charlie Formula</Nav.Link>\r\n                <Nav.Link className=\"link\" onClick={props.goWeekly}>Weekly Recap</Nav.Link>\r\n                <Nav.Link className=\"link\" onClick={props.goTeams}>Teams</Nav.Link>\r\n                {/* <Nav.Link className=\"link\" onClick={props.goRecords}>Records</Nav.Link> */}\r\n                <Nav.Item className=\"ml-auto\">\r\n                    <LogoutButton className=\"link\" goLanding={props.goLanding} />\r\n                </Nav.Item>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default TunaNavBar;","import React, { useState, useEffect, useContext } from 'react'\r\nimport '../../css/BlogPage.css'\r\nimport CreatePost from '../posts/CreatePost'\r\nimport axios from 'axios'\r\nimport PostList from '../posts/PostList'\r\nimport { UserContext } from '../../UserContext'\r\n\r\nconst WeeklyRecap = (props) => {\r\n\r\n    const { userProfile } = useContext(UserContext);\r\n    const [numPosts, setNumPosts] = useState(0);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getNumPosts();\r\n    }, [])\r\n\r\n    // sets to true then false to ensure that post list can refresh more than once\r\n    const handleRefresh = () => {\r\n        setRefresh(true);\r\n        setRefresh(false);\r\n    }\r\n\r\n    const getNumPosts = () => {\r\n        axios.get('/api/get/numpostsfromdb', {\r\n            params: {\r\n                pageName: 'weekly'\r\n            }\r\n        })\r\n            .then(res => {\r\n                setNumPosts(res.data[0].count);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const showCreatePost = () => {\r\n        if (userProfile.email === \"mormanjacob7@gmail.com\" ||\r\n            userProfile.email === \"tlarrain98@gmail.com\") { \r\n            return <CreatePost pageName=\"weekly\"\r\n                               handleRefresh={handleRefresh} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"blogWrapper\">\r\n            <div className=\"blogHeaderWrapper\">\r\n                <div className=\"blogTitle\">Weekly Recap</div>\r\n                <div className=\"blogSubtitle\">by Jacob Morman</div>\r\n                <div className=\"blogCreatePost\">\r\n                    {showCreatePost()}\r\n                </div>\r\n            </div>\r\n            <PostList goPost={props.goPost}\r\n                goProfile={props.goProfile}\r\n                postsPerPage={5}\r\n                numPosts={numPosts}\r\n                pageName='weekly'\r\n                refresh={refresh} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeeklyRecap;","import React, { useState, useEffect, useContext } from 'react'\r\nimport CreatePost from '../posts/CreatePost'\r\nimport '../../css/BlogPage.css'\r\nimport axios from 'axios'\r\nimport PostList from '../posts/PostList'\r\nimport { UserContext } from '../../UserContext'\r\n\r\nconst CharlieFormulaPage = (props) => {\r\n\r\n    const { userProfile } = useContext(UserContext)\r\n    const [numPosts, setNumPosts] = useState(0);\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getNumPosts();\r\n    }, [])\r\n\r\n    // sets to true then false to ensure that post list can refresh more than once\r\n    const handleRefresh = () => {\r\n        setRefresh(true);\r\n        setRefresh(false);\r\n    }\r\n\r\n    const getNumPosts = () => {\r\n        axios.get('/api/get/numpostsfromdb', {\r\n            params: {\r\n                pageName: 'charlie'\r\n            }\r\n        })\r\n            .then(res => {\r\n                setNumPosts(res.data[0].count)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const showCreatePost = () => {\r\n        if (userProfile.email === \"c6keefe@gmail.com\" ||\r\n            userProfile.email === \"tlarrain98@gmail.com\")\r\n        return <CreatePost pageName=\"charlie\" handleRefresh={handleRefresh} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"blogWrapper\">\r\n            <div className=\"blogHeaderWrapper\">\r\n                <div className=\"blogTitle\">The Charlie Formula</div>\r\n                <div className=\"blogSubtitle\">by Charlie Keefe</div>\r\n                <div className=\"blogCreatePost\">\r\n                    {showCreatePost()}\r\n                </div>\r\n            </div>\r\n            <PostList goPost={props.goPost}\r\n                goProfile={props.goProfile}\r\n                postsPerPage={5}\r\n                numPosts={numPosts}\r\n                pageName='charlie'\r\n                refresh={refresh}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharlieFormulaPage;","import React from 'react'\r\nimport '../../../css/TeamPage.css'\r\n\r\n// individual players for each team's roster\r\nconst Player = (props) => {\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            {props.player.fullName}\r\n            <div className=\"teamAbb\">{props.player.proTeamAbbreviation}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React from 'react'\r\nimport '../../../css/TeamPage.css'\r\nimport Player from './Player'\r\n\r\n// roster displayed for every team\r\nconst Roster = (props) => {\r\n\r\n    // get each team's QBs\r\n    const getQBs = () => {\r\n        let qbs = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            if (props.players[i].defaultPosition === \"TQB\") {\r\n                qbs.push(\r\n                    <Player key={i} player={props.players[i]} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return qbs\r\n    }\r\n\r\n    // get each team's RBs\r\n    const getRBs = () => {\r\n        let rbs = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            if (props.players[i].defaultPosition === \"RB\") {\r\n                rbs.push(\r\n                    <Player key={i} player={props.players[i]} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return rbs\r\n    }\r\n\r\n    // get each team's WRs\r\n    const getWRs = () => {\r\n        let wrs = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            if (props.players[i].defaultPosition === \"RB/WR\") {\r\n                wrs.push(\r\n                    <Player key={i} player={props.players[i]} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return wrs\r\n    }\r\n\r\n    // get each team's TEs\r\n    const getTEs = () => {\r\n        let tes = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            for (let j = 0; j < props.players[i].eligiblePositions.length; j++) {\r\n                if (props.players[i].eligiblePositions[j] === \"TE\") {\r\n                    tes.push(\r\n                        <Player key={i} player={props.players[i]} />\r\n                    )\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tes\r\n    }\r\n\r\n    // get each team's D/ST\r\n    const getDSTs = () => {\r\n        let dst = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            if (props.players[i].defaultPosition === \"D/ST\") {\r\n                dst.push(\r\n                    <Player key={i} player={props.players[i]} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return dst\r\n    }\r\n\r\n    // get each team's Ks\r\n    const getKs = () => {\r\n        let ks = [];\r\n\r\n        for (let i = 0; i < props.players.length; i++) {\r\n            for (let j = 0; j < props.players[i].eligiblePositions.length; j++) {\r\n                if (props.players[i].eligiblePositions[j] === \"K\") {\r\n                    ks.push(\r\n                        <Player key={i} player={props.players[i]} />\r\n                    )\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return ks\r\n    }\r\n\r\n    return (\r\n        <div className=\"roster\">\r\n            <div className=\"qb\">\r\n                <div className=\"position\">QB</div>\r\n                {getQBs()}\r\n            </div>\r\n            <div className=\"rb\">\r\n                <div className=\"position\">RB</div>\r\n                {getRBs()}\r\n            </div>\r\n            <div className=\"wr\">\r\n                <div className=\"position\">WR</div>\r\n                {getWRs()}\r\n            </div>\r\n            <div className=\"te\">\r\n                <div className=\"position\">TE</div>\r\n                {getTEs()}\r\n            </div>\r\n            <div className=\"dst\">\r\n                <div className=\"position\">D/ST</div>\r\n                {getDSTs()}\r\n            </div>\r\n            <div className=\"k\">\r\n                <div className=\"position\">K</div>\r\n                {getKs()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Roster","import React from 'react'\r\nimport '../../css/TeamPage.css'\r\nimport Roster from './players/Roster'\r\n\r\nconst TeamPage = (props) => {\r\n\r\n    const formatPoints = (points) => {\r\n        let i = points.toString().indexOf('.');\r\n\r\n        if (i !== -1) {\r\n            return points.toString().substring(0, i + 3);\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n    const getPlayers = () => {\r\n        return <Roster players={props.data.roster}/>\r\n    }\r\n\r\n    const getWeek = () => {\r\n        if(props.week == 18) {\r\n            return \"Current Week\"\r\n        }\r\n        return \"Week: \" + props.week\r\n    }\r\n\r\n    return (\r\n        <div className=\"teamPageWrapper\">\r\n            <button className=\"backButton\"\r\n                onClick={() => props.setTeam(null)}>\r\n                Back to teams\r\n            </button>\r\n            <div className=\"seasonAndWeek\">\r\n                {getWeek()}<br />\r\n                Season: {props.season}\r\n            </div>\r\n            <div className=\"teamPage\">\r\n                <div className=\"teamPageHeader\">\r\n                    <img className=\"image\" alt=\"team\" src={props.data.logoURL} />\r\n                    <div className=\"teamInfo\">\r\n                        <div className=\"name\">{props.data.name}</div>\r\n                        <div className=\"nameAbb\">  {props.data.abbreviation}</div>\r\n                        <div>Record: {props.data.wins} - {props.data.losses}</div>\r\n                        <div>PF: {formatPoints(props.data.regularSeasonPointsFor)}</div>\r\n                        <div>PA: {formatPoints(props.data.regularSeasonPointsAgainst)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"teamContent\">\r\n                    <div className=\"rosterTitle\">Roster</div>\r\n                    {getPlayers()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamPage;","import React from 'react'\r\nimport '../../css/Teams.css'\r\n\r\n// preview of team in team list\r\nconst TeamPreview = (props) => {\r\n\r\n    // ensures only two numbers after the decimal are displayed\r\n    const formatPoints = (points) => {\r\n        let i = points.toString().indexOf('.');\r\n\r\n        if (i !== -1) {\r\n            return points.toString().substring(0, i + 3);\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n    return (\r\n        <div className=\"teamRow\">\r\n            <div className=\"imageBox\">\r\n                <img className=\"logo\" alt=\"team\" src={props.logoURL} />\r\n            </div>\r\n            <div className=\"descriptionBox\">\r\n                <div className=\"teamName\">{props.name}</div>\r\n                <div className=\"w-l\"> ({props.wins} - {props.losses})</div>\r\n                <div className=\"points\">PF: {formatPoints(props.pf)}</div>\r\n                <div className=\"points\">PA: {formatPoints(props.pa)}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamPreview;","import React from 'react';\r\nimport '../../css/Teams.css';\r\nimport TeamPreview from './TeamPreview.js';\r\n\r\nconst TeamList = (props) => {\r\n\r\n    const showTeams = () => {\r\n        if(props.data != null) {\r\n            let teams = [];\r\n            for (let i = 0; i < props.data.length; i++) {\r\n                teams.push(\r\n                    <div className=\"teamWrapper\" onClick={() => props.setTeam(i)}>\r\n                        <TeamPreview key={i} \r\n                            name={props.data[i].name} \r\n                            wins={props.data[i].wins}\r\n                            losses={props.data[i].losses}\r\n                            logoURL={props.data[i].logoURL}\r\n                            pf={props.data[i].regularSeasonPointsFor}\r\n                            pa={props.data[i].regularSeasonPointsAgainst} />\r\n                    </div>\r\n                )\r\n            }\r\n            return teams;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"teamListWrapper\">\r\n            {showTeams()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamList;","import React, { useState } from 'react'\r\nimport '../../css/Teams.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport * as Constants from '../../constants'\r\n\r\nconst TeamSeasonWeek = (props) => {\r\n\r\n    // const [season, setSeason] = useState()\r\n\r\n    return (\r\n        <div className=\"selectorWrapper\">\r\n            <div className=\"seasonSelect\">\r\n                <Form.Label>Season</Form.Label>\r\n                <Form.Control id=\"season\" as=\"select\" defaultValue={props.seasonID}\r\n                    onChange={() => props.setSID(document.getElementById('season').value)}>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2020\">2020</option>\r\n                </Form.Control>\r\n            </div>\r\n            <div className=\"weekSelect\">\r\n                <Form.Label>Week</Form.Label>\r\n                <Form.Control id=\"week\" as=\"select\" defaultValue={props.scoringPeriod}\r\n                    onChange={() => props.setSP(document.getElementById('week').value)}>\r\n                    <option value=\"18\">Current Week</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"11\">11</option>\r\n                    <option value=\"12\">12</option>\r\n                    <option value=\"13\">13</option>\r\n                    <option value=\"14\">14</option>\r\n                    <option value=\"15\">15</option>\r\n                    <option value=\"16\">16</option>\r\n                </Form.Control>\r\n            </div>\r\n            <div className=\"note\">\r\n                Note: Record, PF, and PA are only available for current week.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSeasonWeek","import React, { useState, useEffect } from 'react'\r\nimport '../../css/Teams.css'\r\nimport TeamPage from './TeamPage'\r\nimport TeamList from './TeamList'\r\nimport { Client } from 'espn-fantasy-football-api/node'\r\nimport * as Constants from '../../constants'\r\nimport TeamSeasonWeek from './TeamSeasonWeek'\r\n\r\nconst ffClient = new Client({ leagueId: Constants.LEAGUE_ID });\r\n\r\n// handles the team list and navigation between teams\r\nconst TeamHandler = () => {\r\n\r\n    const [team, setTeam] = useState(null);\r\n    const [data, setData] = useState(null);\r\n    const [SID, setSID] = useState(Constants.SEASON_ID); // year to retrieve data from\r\n    const [SP, setSP] = useState(18); // scoring period, 18 gets most recent week\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // on team change, scroll to top and get new team's data\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        window.scrollTo(0, 0);\r\n        getData();\r\n    }, [team, SID, SP]);\r\n\r\n    const getData = () => {\r\n        ffClient.getTeamsAtWeek({\r\n            seasonId: SID, scoringPeriodId: SP\r\n        })\r\n            .then(response => {\r\n                setLoading(false);\r\n                setData(response);\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n                setData(\"error\");\r\n            })\r\n    }\r\n\r\n    // chooses to show either the team list or the team selected\r\n    const teamPicker = () => {\r\n        // retrieving data\r\n        if (loading) {\r\n            return(\r\n                <>\r\n                    <TeamSeasonWeek setSID={setSID} seasonID={SID}\r\n                        setSP={setSP} scoringPeriod={SP}/>\r\n                    <div className=\"loadingText\">\r\n                        Loading...\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        // error\r\n        else if (data === \"error\") {\r\n            return (\r\n                <>\r\n                    <TeamSeasonWeek setSID={setSID} seasonID={SID}\r\n                        setSP={setSP} scoringPeriod={SP}/>\r\n                    <div className=\"errorMessage\">\r\n                        Could not retrieve data. Please try refreshing.\r\n                        <br /><br />\r\n                        If still broken, tell Galaxy Brain Tomas.\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        // return team list\r\n        else if (team === null) {\r\n            return (\r\n                <>\r\n                    <TeamSeasonWeek setSID={setSID} seasonID={SID}\r\n                        setSP={setSP} scoringPeriod={SP} />\r\n                    <TeamList key={\"hi\"}\r\n                        setTeam={setTeam}\r\n                        data={data} />\r\n                </>\r\n            )\r\n        }\r\n        // return individual team\r\n        else {\r\n            return (\r\n                <TeamPage data={data[team]}\r\n                    setTeam={setTeam}\r\n                    season={SID}\r\n                    week={SP} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"thWrapper\">\r\n            {teamPicker()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamHandler;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../css/Landing.css';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LoginButton = () => {\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    return(\r\n        <div>\r\n            <button className=\"loginButton\"\r\n                size=\"lg\"\r\n                onClick={() => loginWithRedirect()}>\r\n                Log In\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginButton;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../css/Landing.css';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst SignUpButton = () => {\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"signupButton\"\r\n                variant=\"secondary\"\r\n                size=\"lg\"\r\n                onClick={() => loginWithRedirect({\r\n                    screen_hint: 'signup'\r\n                })}>\r\n                Sign Up\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpButton;","import React, { useContext } from 'react'\r\nimport { UserContext } from '../../UserContext'\r\nimport LoginButton from './LoginButton'\r\nimport '../../css/Landing.css'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport SignUpButton from './SignUpButton'\r\nimport axios from 'axios'\r\n\r\nconst Landing = (props) => {\r\n\r\n    const { userProfile, setUserProfile } = useContext(UserContext);\r\n    const isAuthenticated = useAuth0().isAuthenticated;\r\n    const { isLoading } = useAuth0();\r\n    const { user } = useAuth0();\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"landingWrapper\">\r\n                <div className=\"landingPage\">\r\n                    Loading...\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        const data = {\r\n            email: user.email\r\n        }\r\n        // set last login\r\n        axios.put('/api/put/lastlogin', data)\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        \r\n        axios.post('/api/post/usertodb', data)\r\n            .then(\r\n                axios.get('/api/get/userfromdb', {\r\n                params: { email: user.email }\r\n            })\r\n                .then(res => {\r\n                    setUserProfile(res.data[0]);\r\n                    // check if username has been set\r\n                    if (userProfile && userProfile.username === null) {\r\n                        props.goSetUsername();\r\n                    }\r\n                    else {\r\n                        props.goHome();\r\n                    }\r\n                })\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"landingWrapper\">\r\n            <div className=\"landingPage\">\r\n                <div className=\"title\">Show Me Your Tuna</div>\r\n                <SignUpButton />\r\n                <LoginButton />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React, { useContext, useState } from 'react'\r\nimport { UserContext } from '../UserContext'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport axios from 'axios'\r\nimport '../css/SetUsername.css'\r\n\r\n// prompt that shows when user has not set username\r\nconst SetUsername = (props) => {\r\n\r\n    const { user } = useAuth0();\r\n    const { userProfile, setUserProfile } = useContext(UserContext); // used to retrieve user profile\r\n    const [warning, setWarning] = useState(null);  // warning text for setting username\r\n    const [count, setCount] = useState(0);         // counts username length\r\n\r\n    // checks if username is valid or if error occurred\r\n    const check = () => {\r\n        setWarning(null);\r\n        var data = {\r\n            uid: userProfile.uid,\r\n            username: document.getElementById(\"username\").value.trim(),\r\n            bio: ''\r\n        }\r\n        // if username isn't too short or too long\r\n        if (data.username && data.username.length <= 25) {\r\n            axios.put('/api/put/username', data)\r\n                .then(() => {\r\n                    axios.get('/api/get/userfromdb', {\r\n                        params: { email: user.email }\r\n                    })\r\n                        .then(res => {\r\n                            setUserProfile(res.data[0]);\r\n                            props.goHome();\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                            setWarning(\"Server error, please refresh.\");\r\n                        })\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.status === 500) {\r\n                        setWarning(\"This username has been taken.\");\r\n                    }\r\n                    else {\r\n                        setWarning(\"Server error: please refresh.\");\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            setWarning(\"Invalid username.\");\r\n        }\r\n    }\r\n\r\n    // counts the length of the username\r\n    const textCounter = () => {\r\n        setCount(document.getElementById('username').value.trim().length)\r\n    }\r\n\r\n    return (\r\n        <Modal show className=\"modal\">\r\n            <Modal.Header>\r\n                <Modal.Title>Set your username:</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Control className=\"userForm\" type=\"text\"\r\n                    id=\"username\" onChange={() => textCounter()} />\r\n                <div className=\"userCharCounter\">{count}/25</div>\r\n                <div className=\"warning\">{warning}</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={() => check()}>Set username</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SetUsername;","import React, { useContext, useState } from 'react'\r\nimport '../../css/Comment.css'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../UserContext'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst CommentForm = (props) => {\r\n\r\n    const { userProfile } = useContext(UserContext);\r\n    const [alertText, setAlertText] = useState('');\r\n    const [showWarning, setShowWarning] = useState(false);\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const postComment = () => {\r\n        console.log(document.getElementById(\"comment\").value);\r\n        console.log(document.getElementById(\"comment\").value.trim());\r\n        let commentText = document.getElementById(\"comment\").value.trim();\r\n        let data = {\r\n            comment: commentText,\r\n            author: userProfile.username,\r\n            uid: userProfile.uid,\r\n            pid: props.pid\r\n        }\r\n        // check if there is anything in the text area\r\n        if (commentText) {\r\n            axios.post('/api/post/comment', data)\r\n                .then(() => {\r\n                    document.getElementById(\"comment\").value = '';\r\n                    setAlertText(\"Comment submitted!\");\r\n                    setShowSuccess(true);\r\n                    setCount(0);\r\n                    props.handleRefresh();\r\n                })\r\n                .catch((error) => {\r\n                    setAlertText(\"Could not submit comment.\");\r\n                    setShowWarning(true);\r\n                })\r\n        }\r\n        else {\r\n            setAlertText(\"Comment is empty.\");\r\n            setShowWarning(true);\r\n        }\r\n    }\r\n\r\n    const textCounter = () => {\r\n        setCount(document.getElementById('comment').value.trim().length);\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <Alert className=\"commentAlert\" variant=\"danger\"\r\n                show={showWarning} onClose={() => setShowWarning(false)} dismissible>\r\n                {alertText}\r\n            </Alert>\r\n            <Alert className=\"commentAlert\" variant=\"success\"\r\n                show={showSuccess} onClose={() => setShowSuccess(false)} dismissible>\r\n                {alertText}\r\n            </Alert>\r\n            <div className=\"commentFormWrapper\">\r\n                <textarea className=\"commentForm\" id=\"comment\" \r\n                rows=\"4\" onChange={() => textCounter()}/>\r\n            </div>\r\n            <div className=\"charCount\">{count}/512</div>\r\n            <button className=\"commentButton\" onClick={() => postComment()}>submit</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentForm","import React, { useState } from 'react'\r\nimport '../../css/DeleteModal.css'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport axios from 'axios'\r\n\r\nconst DeleteComment = (props) => {\r\n\r\n    const [message, setMessage] = useState(\"Deleting comment...\");\r\n    const [show, setShow] = useState(false); // dictates whether message is shown or not\r\n\r\n    const handleDelete = () => {\r\n        console.log(props.cid)\r\n        setShow(true);\r\n        let data = {\r\n            cid: props.cid\r\n        }\r\n        axios.delete('/api/delete/comment', { data })\r\n            .then(() => {\r\n                setMessage(\"Comment deleted.\");\r\n                props.handleRefresh();\r\n                props.handleClose();\r\n                window.scrollTo(0, 0);\r\n            })\r\n    }\r\n\r\n    const showDeleting = () => {\r\n        if (show) {\r\n            return <div className=\"deleteMessage\">{message}</div>\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Modal show={props.show}\r\n            onHide={() => props.handleClose()}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Are you sure you want to delete this comment?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <button className=\"deleteButton\" onClick={() => handleDelete()}>\r\n                    Delete\r\n                </button>\r\n                <button className=\"cancelDeleteButton\" onClick={() => props.handleClose()}>\r\n                    Cancel\r\n                </button>\r\n                {showDeleting()}\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteComment","import React, { useContext, useState } from 'react'\r\nimport '../../css/Comment.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport DeleteComment from './DeleteComment'\r\n\r\nconst Comment = (props) => {\r\n\r\n    const { userProfile } = useContext(UserContext);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const showDelete = () => {\r\n        if (userProfile.uid == props.data.user_id) {\r\n            return <div className=\"commentDelete\"\r\n                onClick={() => handleShow()}>delete</div>\r\n        } \r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    // formats date into MM/DD/YYYY\r\n    const formatDate = (date) => {\r\n        let year = date.substring(0, 4);\r\n        let month = date.substring(5, 7);\r\n        let day = date.substring(8, 10);\r\n        let mdy = month + '/' + day + '/' + year\r\n\r\n        return mdy\r\n    }\r\n    \r\n    return(\r\n        <div className=\"commentWrapper\">\r\n            <div className=\"commentContent\">\r\n                <div className=\"commentAuthor\"\r\n                    onClick={() => props.goProfile(props.data.user_id)}>\r\n                    {props.data.author}\r\n                </div>\r\n                <div className=\"commentText\">{props.data.comment}</div>\r\n                {showDelete()}\r\n            </div>\r\n            <div className=\"commentDate\">{formatDate(props.data.date_created)}</div>\r\n            <DeleteComment show={show}\r\n                handleRefresh={props.handleRefresh}\r\n                handleClose={handleClose}\r\n                handleShow={handleShow}\r\n                cid={props.data.cid}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React, { useEffect, useState } from 'react'\r\nimport '../../css/Comment.css'\r\nimport axios from 'axios'\r\nimport Comment from './Comment'\r\nimport zucc from '../../images/zucc.png'\r\n\r\nconst CommentList = (props) => {\r\n\r\n    const [comments, setComments] = useState();\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getComments();\r\n    }, [props.refresh])\r\n\r\n    const getComments = () => {\r\n        axios.get('/api/get/commentsonpost', {\r\n            params: { pid: props.pid }\r\n        })\r\n            .then((res) => {\r\n                setIsError(false);\r\n                setComments(res.data);\r\n            })\r\n            .catch(() => {\r\n                setIsError(true);\r\n            })\r\n    }\r\n\r\n    const showComments = () => {\r\n        // if the server couldn't retrieve comments\r\n        if (isError) {\r\n            return (\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"comZucc\"/>\r\n                    <div className=\"errorComments\">Error while retrieving comments.</div>\r\n                </div>\r\n            )\r\n        }\r\n        if (comments) {\r\n            // if no comments exist for the post\r\n            if (!comments.length) {\r\n                return <div className=\"noComments\">No comments.</div>\r\n            }\r\n            else {\r\n                let list = [];\r\n                for (let i = 0; i < comments.length; i++) {\r\n                    list.push(\r\n                        <Comment key={i} \r\n                            data={comments[i]}\r\n                            handleRefresh={props.handleRefresh}\r\n                            goProfile={props.goProfile}/>\r\n                    )\r\n                }\r\n                return list\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"commentList\">\r\n            {showComments()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList","import React, { useState } from 'react'\r\nimport '../../css/DeleteModal.css'\r\nimport axios from 'axios'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst DeletePost = (props) => {\r\n\r\n    const [show, setShow] = useState(false); // dictates whether message is shown or not\r\n    const [message, setMessage] = useState(\"Deleting comments.\");\r\n\r\n    const handleDelete = () => {\r\n        setShow(true);\r\n        let data = {\r\n            pid: props.pid\r\n        }\r\n        axios.delete('/api/delete/allcomments', { data })\r\n            .then(() => {\r\n                setMessage(\"Deleting post.\");\r\n                axios.delete('/api/delete/post', { data })\r\n                    .then(() => {\r\n                        setMessage(\"Post deleted.\");\r\n                        props.goHome();\r\n                    })\r\n                    .catch((error) => {\r\n                        setMessage(\"Error: could not delete post.\");\r\n                        console.log(error)\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                setMessage(\"Error: could not delete post.\");\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const showDeleting = () => {\r\n        if (show) {\r\n            return <div className=\"deleteMessage\">{message}</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.show} \r\n            onHide={() => props.handleClose()}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Are you sure you want to delete this post?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <button className=\"deleteButton\" onClick={() => handleDelete()}>\r\n                    Delete\r\n                </button>\r\n                <button className=\"cancelDeleteButton\" onClick={() => props.handleClose()}>\r\n                    Cancel\r\n                </button>\r\n                {showDeleting()}\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeletePost","import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../UserContext'\r\nimport '../../css/Post.css'\r\nimport axios from 'axios'\r\nimport CommentForm from '../comments/CommentForm'\r\nimport CommentList from '../comments/CommentList'\r\nimport DeletePost from './DeletePost'\r\nimport LikeDislike from './LikeDislike'\r\nimport zucc from '../../images/zucc.png'\r\n\r\nconst Post = (props) => {\r\n\r\n    const { userProfile } = useContext(UserContext);\r\n\r\n    const [post, setPost] = useState(); // used to set and store post data\r\n    const [refresh, setRefresh] = useState(false); // refreshes page\r\n    const [show, setShow] = useState(false); // show delete post modal\r\n    const [error, setError] = useState(false); // shows error\r\n\r\n    // get post data on load\r\n    useEffect(() => {\r\n        getPost();\r\n    }, [])\r\n\r\n    // sets to true then false to ensure that post list can refresh more than once\r\n    const handleRefresh = () => {\r\n        setRefresh(true);\r\n        setRefresh(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    const getPost = () => {\r\n        axios.get('/api/get/post', {\r\n            params: {\r\n                pid: props.pid\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setPost(res.data[0]);\r\n            })\r\n            .catch(error => {\r\n                setError(true);\r\n                console.log(\"error: \" + error)\r\n            })\r\n    }\r\n\r\n    // formats date into MM/DD/YYYY\r\n    const formatDate = (date) => {\r\n        let year = date.substring(0, 4);\r\n        let month = date.substring(5, 7);\r\n        let day = date.substring(8, 10);\r\n        let mdy = month + '/' + day + '/' + year;\r\n\r\n        return mdy\r\n    }\r\n\r\n    const showDelete = () => {\r\n        if (userProfile.uid == post.user_id) {\r\n            return <div className=\"postDelete\" onClick={() => handleShow()}>delete post</div>\r\n        }\r\n    }\r\n\r\n    if (error) {\r\n        return(\r\n            <div className=\"postPageWrapper\">\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"postZucc\"/>\r\n                <div className=\"postError\">Error loading post, please refresh.</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if (post) {\r\n        return (\r\n            <div className=\"postPageWrapper\">\r\n                <div className=\"postContent\">\r\n                    <div className=\"postPageTitle\">{post.title}</div>\r\n                    <div className=\"postPageTS\">{formatDate(post.date_created)}</div>\r\n                    <div className=\"postPageAuthor\"\r\n                        onClick={() => props.goProfile(post.user_id)}>\r\n                        {post.author}\r\n                    </div>\r\n                    <div className=\"postPageBody\">{post.body}</div>\r\n                    {showDelete()}\r\n                    <LikeDislike post={post} />\r\n                </div>\r\n                <div className=\"postCommentWrapper\">\r\n                    <div className=\"commentTitle\">Comments</div>\r\n                    <CommentForm pid={post.pid}\r\n                        handleRefresh={handleRefresh} />\r\n                    <CommentList pid={post.pid}\r\n                        refresh={refresh} \r\n                        handleRefresh={handleRefresh}\r\n                        goProfile={props.goProfile}/>\r\n                </div>\r\n                <DeletePost goHome={props.goHome}\r\n                    show={show}\r\n                    handleClose={handleClose}\r\n                    pid={post.pid} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"postPageWrapper\">\r\n                <div className=\"postLoading\">Loading...</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport '../../css/Records.css'\r\n\r\nconst Records = () => {\r\n    return(\r\n        <div className=\"recordsPageWrapper\">\r\n            records page coming soon sry guys\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Records","import React, { useEffect, useState } from 'react'\r\nimport '../../css/PostList.css'\r\nimport PostPreview from '../posts/PostPreview'\r\nimport axios from 'axios'\r\nimport zucc from '../../images/zucc.png'\r\n\r\nconst UserPosts = (props) => {\r\n\r\n    const [posts, setPosts] = useState(null); // used for post data\r\n    const [empty, setEmpty] = useState(false); // if no posts returned\r\n    const [error, setError] = useState(false); // displays error\r\n\r\n    // on page change, scroll to top and get data for page\r\n    useEffect(() => {\r\n        getUserPosts();\r\n    }, [])\r\n\r\n    // set the post data for the current page\r\n    const getUserPosts = () => {\r\n        axios.get('/api/get/postsfromuser', {\r\n            params: {\r\n                uid: props.uid\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (res.data.length) {\r\n                    setPosts(res.data);\r\n                    setEmpty(false);\r\n                }\r\n                else {\r\n                    setEmpty(true);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setError(true);\r\n            })\r\n    }\r\n\r\n    // returns a list of all the post preview components for the page\r\n    const getPostPreviews = () => {\r\n        let list = [];\r\n        if (error) {\r\n            return (\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"plZucc\" />\r\n                    <div className=\"plError\">Error loading post list, please refresh.</div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (empty) {\r\n            return <div className=\"noPosts\">No posts.</div>\r\n        }\r\n        else if (posts == null && !empty) {\r\n            return <div>Loading...</div>\r\n        }\r\n        else if (posts !== null) {\r\n            for (let i = 0; i < posts.length; i++) {\r\n                list.push(\r\n                    <PostPreview key={i}\r\n                        post={posts[i]}\r\n                        goPost={props.goPost}\r\n                        goProfile={props.goProfile} />\r\n                )\r\n            }\r\n        }\r\n\r\n        return list\r\n    }\r\n\r\n    return (\r\n        <div className=\"postListWrapper\">\r\n            {getPostPreviews()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPosts","import React from 'react'\r\nimport '../../css/ProfileComment.css'\r\n\r\nconst ProfileComment = (props) => {\r\n\r\n    return (\r\n        <div className=\"pcWrapper\" onClick={() => props.goPost(props.data.post_id)}>\r\n            <div className=\"pcContent\">\r\n                <div className=\"pcAuthor\"\r\n                    onClick={() => props.goProfile(props.data.user_id)}>\r\n                    {props.data.author}\r\n                </div>\r\n                <div className=\"pcText\">{props.data.comment}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileComment","import React, { useEffect, useState } from 'react'\r\nimport '../../css/ProfileComment.css'\r\nimport axios from 'axios'\r\nimport ProfileComment from './ProfileComment'\r\nimport zucc from '../../images/zucc.png'\r\n\r\nconst UserComments = (props) => {\r\n\r\n    const [comments, setComments] = useState();\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getUserComments();\r\n    }, [props.refresh])\r\n\r\n    const getUserComments = () => {\r\n        axios.get('/api/get/commentsfromuser', {\r\n            params: { uid: props.uid }\r\n        })\r\n            .then((res) => {\r\n                setIsError(false);\r\n                setComments(res.data);\r\n            })\r\n            .catch(() => {\r\n                setIsError(true);\r\n            })\r\n    }\r\n\r\n    const showComments = () => {\r\n        // if the server couldn't retrieve comments\r\n        if (isError) {\r\n            return (\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"comZucc\" />\r\n                    <div className=\"noPC\">Error while retrieving comments.</div>\r\n                </div>\r\n            )\r\n        }\r\n        if (comments) {\r\n            // if no comments exist for the post\r\n            if (!comments.length) {\r\n                return <div className=\"pcNoComments\">No comments.</div>\r\n            }\r\n            else {\r\n                let list = [];\r\n                for (let i = 0; i < comments.length; i++) {\r\n                    list.push(\r\n                        <ProfileComment key={i}\r\n                            data={comments[i]}\r\n                            goProfile={props.goProfile}\r\n                            goPost={props.goPost}/>\r\n                    )\r\n                }\r\n                return list\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showComments()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserComments","import React, { useEffect, useState } from 'react'\r\nimport '../../css/ShowProfile.css'\r\nimport axios from 'axios'\r\nimport zucc from '../../images/zucc.png'\r\nimport UserPosts from './UserPosts'\r\nimport UserComments from './UserComments'\r\n\r\nconst ShowProfile = (props) => {\r\n\r\n    const [profile, setProfile] = useState();\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, [])\r\n\r\n    const getUser = () => {\r\n        axios.get('/api/get/userbyuid', {\r\n            params: { uid: props.uid }\r\n        })\r\n            .then(res => {\r\n                setProfile(res.data[0]);\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const getDates = () => {\r\n        if (profile.date_created && profile.last_login) {\r\n            return (\r\n                <>\r\n                    <div className=\"spDates\">date created: {formatDate(profile.date_created)}</div>\r\n                    <div className=\"spDates\">last online: {formatDate(profile.last_login)}</div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    // formats date into MM/DD/YYYY\r\n    const formatDate = (date) => {\r\n        let year = date.substring(0, 4);\r\n        let month = date.substring(5, 7);\r\n        let day = date.substring(8, 10);\r\n        let mdy = month + '/' + day + '/' + year;\r\n\r\n        return mdy\r\n    }\r\n\r\n    if (!profile) {\r\n        return (\r\n            <div className=\"spWrapper\">\r\n                <div className=\"spLoading\">Loading...</div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (error) {\r\n        return (\r\n            <div className=\"spWrapper\">\r\n                <div className=\"errWrap\">\r\n                    <img src={zucc} alt=\"error\" className=\"spZucc\" />\r\n                    <div className=\"spError\">Could not load profile, please refresh.</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"spWrapper\">\r\n                <div className=\"pCol1\">\r\n                    <div className=\"spHeader\">\r\n                        <div className=\"spUsername\">{profile.username}</div>\r\n                        {getDates()}\r\n                        <div className=\"spBio\">{profile.bio}</div>\r\n                    </div>\r\n                    <div className=\"spPosts\">\r\n                        <div className=\"spPostsTitle\">Recent posts</div>\r\n                        <UserPosts uid={props.uid}\r\n                            goProfile={props.goProfile}\r\n                            goPost={props.goPost} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"pCol2\">\r\n                    <div className=\"spComments\">\r\n                        <div className=\"spCommentsTitle\">Recent comments</div>\r\n                        <UserComments uid={props.uid}\r\n                            goProfile={props.goProfile}\r\n                            goPost={props.goPost} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowProfile","import React, { useState, useContext, useEffect } from 'react'\r\nimport '../css/ContentHandler.css'\r\nimport Home from './home/Home'\r\nimport TunaNavBar from './TunaNavBar'\r\nimport WeeklyRecap from './weeklyrecap/WeeklyRecap'\r\nimport CharlieFormulaPage from './charlieformula/CharlieFormulaPage'\r\nimport TeamHandler from './teams/TeamHandler'\r\nimport Landing from './landingpages/Landing'\r\nimport SetUsername from './SetUsername'\r\nimport Post from './posts/Post'\r\nimport Records from './records/Records'\r\nimport ShowProfile from './profile/ShowProfile'\r\n// import { UserContext } from '../UserContext'\r\n\r\n/*\r\n * Chooses the current page to display\r\n * landing: landing page where user can log in\r\n * setuser: if user has not set username, show prompt on login\r\n * home: home page including standings and league feed\r\n * times: shows the weekly recap page\r\n * charlie: shows the charlie formula page\r\n * teams: shows the teams page with the team list\r\n * post: loads an individual post when clicked on\r\n * records: shows the league records page\r\n * profile: shows profile that was clicked on\r\n*/\r\nconst ContentHandler = () => {\r\n\r\n    const [page, setPage] = useState('landing'); // stores page context\r\n    const [pid, setPid] = useState(); // used for loading individual posts\r\n    const [uid, setUid] = useState();\r\n    // const { userProfile, setUserProfile } = useContext(UserContext);\r\n\r\n    // helper functions to dictate which page to show\r\n    const goLanding = () => {\r\n        setPage('landing');\r\n    }\r\n    const goSetUsername = () => {\r\n        setPage('setuser')\r\n    }\r\n    const goHome = () => {\r\n        setPage('home');\r\n    }\r\n    const goWeekly = () => {\r\n        setPage('times');\r\n    }\r\n    const goCharlie = () => {\r\n        setPage('charlie');\r\n    }\r\n    const goTeams = () => {\r\n        setPage('teams');\r\n    }\r\n    const goPost = (pageId) => {\r\n        setPid(pageId);\r\n        setPage('post');\r\n    }\r\n    const goRecords = () => {\r\n        setPage('records');\r\n    }\r\n    const goProfile = (userId) => {\r\n        setUid(userId);\r\n        setPage('profile');\r\n    }\r\n\r\n    const showNavBar = () => {\r\n        if (page !== 'landing' && page !== 'setuser') {\r\n            return (\r\n                <TunaNavBar goHome={goHome}\r\n                    goWeekly={goWeekly}\r\n                    goCharlie={goCharlie}\r\n                    goTeams={goTeams}\r\n                    goLanding={goLanding}\r\n                    goRecords={goRecords} />\r\n            )\r\n        }\r\n    }\r\n\r\n    // chooses which page to render\r\n    const pickPage = () => {\r\n        if (page === 'landing') {\r\n            return (\r\n                <Landing goHome={goHome}\r\n                    goSetUsername={goSetUsername} />\r\n            )\r\n        }\r\n        if (page === 'home') {\r\n            return (\r\n                <Home goPost={goPost}\r\n                    goProfile={goProfile}/>\r\n            )\r\n        }\r\n        if (page === 'times') {\r\n            return (\r\n                <WeeklyRecap goPost={goPost} \r\n                    goProfile={goProfile}/>\r\n            )\r\n        }\r\n        if (page === 'charlie') {\r\n            return (\r\n                <CharlieFormulaPage goPost={goPost} \r\n                    goProfile={goProfile}/>\r\n            )\r\n        }\r\n        if (page === 'teams') {\r\n            return (\r\n                <TeamHandler />\r\n            )\r\n        }\r\n        if (page === 'setuser') {\r\n            return (\r\n                <SetUsername goHome={goHome} />\r\n            )\r\n        }\r\n        if (page === 'post') {\r\n            return <Post pid={pid}\r\n                goHome={goHome} \r\n                goProfile={goProfile}/>\r\n        }\r\n        if (page === 'records') {\r\n            return <Records />\r\n        }\r\n        if (page === 'profile') {\r\n            return <ShowProfile uid={uid}\r\n                        goProfile={goProfile}\r\n                        goPost={goPost}/>\r\n        }\r\n    }\r\n    return (\r\n        <div className='Wrapper'>\r\n            {showNavBar()}\r\n            <div className=\"pageWrapper\">\r\n                {pickPage()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentHandler;","import React, { useState } from 'react'\r\nimport ContentHandler from './components/ContentHandler.js'\r\nimport { UserContext } from './UserContext.js';\r\n\r\nfunction App() {\r\n\r\n  const [userProfile, setUserProfile] = useState(null)\r\n  \r\n  return (\r\n    <UserContext.Provider value={{userProfile, setUserProfile}}>\r\n      <ContentHandler />\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/medovote.bd801e6c.png\";","module.exports = __webpack_public_path__ + \"static/media/hoffvote.2e9cebd1.png\";"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlarr\\\\ffwebsite\\\\src\\\\components\\\\home\\\\SideStandings.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport StandingEntry from './StandingEntry.js';\nimport '../../css/Home.css';\nimport { Client, Team } from 'espn-fantasy-football-api/node';\nconst SID = '2020';\nconst LID = '434534';\nconst ffClient = new Client({\n  leagueId: LID\n});\n\nclass SideStandings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  } // findOrder(data) {\n  //     let ordered = [];\n  //     for(const team in Object.entries(data)) {\n  //         ordered[data[team].playoffSeed - 1] = data[team];\n  //     }\n  //     return ordered;\n  // }\n  // getStandings() {\n  //     let standings = [];\n  //     let mapping = [];\n  //     ffClient.getTeamsAtWeek({ seasonId: SID, scoringPeriodId: 18 })\n  //     .then(response => {\n  //         standings = this.findOrder(response);\n  //         for(let i = 0; i < standings.length; i++) {\n  //             mapping.push(\n  //                 <StandingEntry team={standings[i]} />\n  //             )\n  //         }\n  //     })\n  //     .catch(error => {\n  //         console.log({ error });\n  //     })\n  // }\n  // react doesn't like async functions being called from render :(\n\n\n  async getData() {\n    const response = await ffClient.getTeamsAtWeek({\n      seasonId: SID,\n      scoringPeriodId: 18\n    });\n    this.setState({\n      data: response\n    });\n  } // setOrder() {\n  //     let ordered = [];\n  //     for(const team in Object.entries(this.state.data)) {\n  //         ordered[this.state.data[team].playoffSeed - 1] = this.state.data[team];\n  //     }\n  //     return ordered;\n  // }\n\n\n  displayStandings() {\n    //let ordered = setOrder();\n    console.log(console.log(this.state.data));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidecard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"League Standings\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"Team\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, \"W\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"L\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, this.displayStandings())))));\n  }\n\n}\n\nexport default SideStandings;","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/src/components/home/SideStandings.js"],"names":["React","Component","Table","Card","StandingEntry","Client","Team","SID","LID","ffClient","leagueId","SideStandings","constructor","props","state","data","componentDidMount","getData","response","getTeamsAtWeek","seasonId","scoringPeriodId","setState","displayStandings","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,gCAA7B;AAEA,MAAMC,GAAG,GAAG,MAAZ;AACA,MAAMC,GAAG,GAAG,QAAZ;AAEA,MAAMC,QAAQ,GAAG,IAAIJ,MAAJ,CAAW;AAAEK,EAAAA,QAAQ,EAAEF;AAAZ,CAAX,CAAjB;;AAEA,MAAMG,aAAN,SAA4BV,SAA5B,CAAsC;AAElCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL;AACH,GAZiC,CAclC;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;AACA,QAAMA,OAAN,GAAgB;AACZ,UAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,cAAT,CAAwB;AAAEC,MAAAA,QAAQ,EAAEb,GAAZ;AAAiBc,MAAAA,eAAe,EAAE;AAAlC,KAAxB,CAAvB;AAEA,SAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAEG;AAAP,KAAd;AACH,GAjDiC,CAmDlC;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEAK,EAAAA,gBAAgB,GAAG;AACf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB,CAAZ;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,gBAAL,EADL,CANJ,CADJ,CAFJ,CADJ,CADJ;AAmBH;;AAtFiC;;AAyFtC,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Card from 'react-bootstrap/Card';\r\nimport StandingEntry from './StandingEntry.js';\r\nimport '../../css/Home.css';\r\nimport { Client, Team } from 'espn-fantasy-football-api/node';\r\n\r\nconst SID = '2020';\r\nconst LID = '434534';\r\n\r\nconst ffClient = new Client({ leagueId: LID });\r\n\r\nclass SideStandings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    // findOrder(data) {\r\n    //     let ordered = [];\r\n\r\n    //     for(const team in Object.entries(data)) {\r\n    //         ordered[data[team].playoffSeed - 1] = data[team];\r\n    //     }\r\n\r\n    //     return ordered;\r\n    // }\r\n\r\n    // getStandings() {\r\n    //     let standings = [];\r\n    //     let mapping = [];\r\n\r\n    //     ffClient.getTeamsAtWeek({ seasonId: SID, scoringPeriodId: 18 })\r\n    //     .then(response => {\r\n    //         standings = this.findOrder(response);\r\n    //         for(let i = 0; i < standings.length; i++) {\r\n    //             mapping.push(\r\n    //                 <StandingEntry team={standings[i]} />\r\n    //             )\r\n    //         }\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.log({ error });\r\n    //     })\r\n\r\n\r\n    // }\r\n\r\n    // react doesn't like async functions being called from render :(\r\n    async getData() {\r\n        const response = await ffClient.getTeamsAtWeek({ seasonId: SID, scoringPeriodId: 18 });\r\n        \r\n        this.setState({data: response});\r\n    }\r\n\r\n    // setOrder() {\r\n    //     let ordered = [];\r\n\r\n    //     for(const team in Object.entries(this.state.data)) {\r\n    //         ordered[this.state.data[team].playoffSeed - 1] = this.state.data[team];\r\n    //     }\r\n\r\n    //     return ordered;\r\n    // }\r\n\r\n    displayStandings() {\r\n        //let ordered = setOrder();\r\n        console.log(console.log(this.state.data));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidecard\">\r\n                <Card>\r\n                    <Card.Header>League Standings</Card.Header>\r\n                    <Card.Body>\r\n                        <Table size=\"sm\">\r\n                            <thead>\r\n                                <th>Team</th>\r\n                                <th>W</th>\r\n                                <th>L</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.displayStandings()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideStandings;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const pkg = require('../package.json');\n\nconst USER_AGENT = `${pkg.name}/${pkg.version} (${pkg.homepage})`;\nconst DISCOVERY = '/.well-known/openid-configuration';\nconst WEBFINGER = '/.well-known/webfinger';\nconst REL = 'http://openid.net/specs/connect/1.0/issuer';\nconst CLIENT_DEFAULTS = {\n  application_type: 'web',\n  grant_types: ['authorization_code'],\n  id_token_signed_response_alg: 'RS256',\n  response_types: ['code'],\n  token_endpoint_auth_method: 'client_secret_basic'\n};\nconst ISSUER_DEFAULTS = {\n  claims_parameter_supported: false,\n  grant_types_supported: ['authorization_code', 'implicit'],\n  request_parameter_supported: false,\n  request_uri_parameter_supported: true,\n  require_request_uri_registration: false,\n  response_modes_supported: ['query', 'fragment'],\n  token_endpoint_auth_methods_supported: ['client_secret_basic']\n};\nconst CALLBACK_PROPERTIES = ['access_token', 'code', 'error', 'error_description', 'expires_in', 'id_token', 'state', 'token_type', 'session_state'];\nconst DEFAULT_HTTP_OPTIONS = {\n  followRedirect: false,\n  headers: {\n    'User-Agent': USER_AGENT,\n    Accept: 'application/json'\n  },\n  retries: 0,\n  timeout: 1500\n};\nconst JWT_CONTENT = /^application\\/jwt/;\nmodule.exports.CALLBACK_PROPERTIES = CALLBACK_PROPERTIES;\nmodule.exports.CLIENT_DEFAULTS = CLIENT_DEFAULTS;\nmodule.exports.DEFAULT_HTTP_OPTIONS = DEFAULT_HTTP_OPTIONS;\nmodule.exports.ISSUER_DEFAULTS = ISSUER_DEFAULTS;\nmodule.exports.JWT_CONTENT = JWT_CONTENT;\nmodule.exports.USER_AGENT = USER_AGENT;\nmodule.exports.DISCOVERY = DISCOVERY;\nmodule.exports.REL = REL;\nmodule.exports.WEBFINGER = WEBFINGER;","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/node_modules/openid-client/lib/consts.js"],"names":["pkg","require","USER_AGENT","name","version","homepage","DISCOVERY","WEBFINGER","REL","CLIENT_DEFAULTS","application_type","grant_types","id_token_signed_response_alg","response_types","token_endpoint_auth_method","ISSUER_DEFAULTS","claims_parameter_supported","grant_types_supported","request_parameter_supported","request_uri_parameter_supported","require_request_uri_registration","response_modes_supported","token_endpoint_auth_methods_supported","CALLBACK_PROPERTIES","DEFAULT_HTTP_OPTIONS","followRedirect","headers","Accept","retries","timeout","JWT_CONTENT","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AAEA,MAAMC,UAAU,GAAI,GAAEF,GAAG,CAACG,IAAK,IAAGH,GAAG,CAACI,OAAQ,KAAIJ,GAAG,CAACK,QAAS,GAA/D;AAEA,MAAMC,SAAS,GAAG,mCAAlB;AACA,MAAMC,SAAS,GAAG,wBAAlB;AACA,MAAMC,GAAG,GAAG,4CAAZ;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,gBAAgB,EAAE,KADI;AAEtBC,EAAAA,WAAW,EAAE,CAAC,oBAAD,CAFS;AAGtBC,EAAAA,4BAA4B,EAAE,OAHR;AAItBC,EAAAA,cAAc,EAAE,CAAC,MAAD,CAJM;AAKtBC,EAAAA,0BAA0B,EAAE;AALN,CAAxB;AAQA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,0BAA0B,EAAE,KADN;AAEtBC,EAAAA,qBAAqB,EAAE,CAAC,oBAAD,EAAuB,UAAvB,CAFD;AAGtBC,EAAAA,2BAA2B,EAAE,KAHP;AAItBC,EAAAA,+BAA+B,EAAE,IAJX;AAKtBC,EAAAA,gCAAgC,EAAE,KALZ;AAMtBC,EAAAA,wBAAwB,EAAE,CAAC,OAAD,EAAU,UAAV,CANJ;AAOtBC,EAAAA,qCAAqC,EAAE,CAAC,qBAAD;AAPjB,CAAxB;AAUA,MAAMC,mBAAmB,GAAG,CAC1B,cAD0B,EAE1B,MAF0B,EAG1B,OAH0B,EAI1B,mBAJ0B,EAK1B,YAL0B,EAM1B,UAN0B,EAO1B,OAP0B,EAQ1B,YAR0B,EAS1B,eAT0B,CAA5B;AAYA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,cAAc,EAAE,KADW;AAE3BC,EAAAA,OAAO,EAAE;AAAE,kBAAcxB,UAAhB;AAA4ByB,IAAAA,MAAM,EAAE;AAApC,GAFkB;AAG3BC,EAAAA,OAAO,EAAE,CAHkB;AAI3BC,EAAAA,OAAO,EAAE;AAJkB,CAA7B;AAOA,MAAMC,WAAW,GAAG,mBAApB;AAEAC,MAAM,CAACC,OAAP,CAAeT,mBAAf,GAAqCA,mBAArC;AACAQ,MAAM,CAACC,OAAP,CAAevB,eAAf,GAAiCA,eAAjC;AACAsB,MAAM,CAACC,OAAP,CAAeR,oBAAf,GAAsCA,oBAAtC;AACAO,MAAM,CAACC,OAAP,CAAejB,eAAf,GAAiCA,eAAjC;AACAgB,MAAM,CAACC,OAAP,CAAeF,WAAf,GAA6BA,WAA7B;AACAC,MAAM,CAACC,OAAP,CAAe9B,UAAf,GAA4BA,UAA5B;AACA6B,MAAM,CAACC,OAAP,CAAe1B,SAAf,GAA2BA,SAA3B;AACAyB,MAAM,CAACC,OAAP,CAAexB,GAAf,GAAqBA,GAArB;AACAuB,MAAM,CAACC,OAAP,CAAezB,SAAf,GAA2BA,SAA3B","sourcesContent":["const pkg = require('../package.json');\n\nconst USER_AGENT = `${pkg.name}/${pkg.version} (${pkg.homepage})`;\n\nconst DISCOVERY = '/.well-known/openid-configuration';\nconst WEBFINGER = '/.well-known/webfinger';\nconst REL = 'http://openid.net/specs/connect/1.0/issuer';\n\nconst CLIENT_DEFAULTS = {\n  application_type: 'web',\n  grant_types: ['authorization_code'],\n  id_token_signed_response_alg: 'RS256',\n  response_types: ['code'],\n  token_endpoint_auth_method: 'client_secret_basic',\n};\n\nconst ISSUER_DEFAULTS = {\n  claims_parameter_supported: false,\n  grant_types_supported: ['authorization_code', 'implicit'],\n  request_parameter_supported: false,\n  request_uri_parameter_supported: true,\n  require_request_uri_registration: false,\n  response_modes_supported: ['query', 'fragment'],\n  token_endpoint_auth_methods_supported: ['client_secret_basic'],\n};\n\nconst CALLBACK_PROPERTIES = [\n  'access_token',\n  'code',\n  'error',\n  'error_description',\n  'expires_in',\n  'id_token',\n  'state',\n  'token_type',\n  'session_state',\n];\n\nconst DEFAULT_HTTP_OPTIONS = {\n  followRedirect: false,\n  headers: { 'User-Agent': USER_AGENT, Accept: 'application/json' },\n  retries: 0,\n  timeout: 1500,\n};\n\nconst JWT_CONTENT = /^application\\/jwt/;\n\nmodule.exports.CALLBACK_PROPERTIES = CALLBACK_PROPERTIES;\nmodule.exports.CLIENT_DEFAULTS = CLIENT_DEFAULTS;\nmodule.exports.DEFAULT_HTTP_OPTIONS = DEFAULT_HTTP_OPTIONS;\nmodule.exports.ISSUER_DEFAULTS = ISSUER_DEFAULTS;\nmodule.exports.JWT_CONTENT = JWT_CONTENT;\nmodule.exports.USER_AGENT = USER_AGENT;\nmodule.exports.DISCOVERY = DISCOVERY;\nmodule.exports.REL = REL;\nmodule.exports.WEBFINGER = WEBFINGER;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"const espnRequest = require('./espn-request');\n\nfunction getLeagueScoreboard(cookies, leagueId, season = 2018) {\n  let url = 'http://games.espn.com/ffl/api/v2/scoreboard?leagueId=' + leagueId + '&seasonId=' + season;\n  return espnRequest.requestToPromise(url, cookies);\n}\n\nfunction getMatchups(cookies, leagueId, season = 2018) {\n  return getLeagueScoreboard(cookies, leagueId, season).then(leagueData => {\n    return leagueData.scoreboard.matchups;\n  });\n}\n\nfunction getSpecificMatchup(cookies, leagueId, teamLocation, teamName, season = 2018) {\n  return getMatchups(cookies, leagueId, season).then(matchups => {\n    return matchups.filter(matchup => {\n      return matchup.teams[0].team.teamLocation === teamLocation && matchup.teams[0].team.teamNickname === teamName || matchup.teams[1].team.teamLocation === teamLocation && matchup.teams[1].team.teamNickname === teamName;\n    });\n  }).then(matchup => {\n    return matchup[0].teams;\n  }).then(teams => {\n    return teams.map(team => {\n      return {\n        teamName: team.team.teamLocation + ' ' + team.team.teamNickname,\n        score: team.score,\n        wins: team.team.record.overallWins,\n        losses: team.team.record.overallLosses,\n        logoUrl: team.team.logoUrl,\n        teamId: team.teamId\n      };\n    });\n  });\n}\n\nmodule.exports = {\n  getLeagueScoreboard: getLeagueScoreboard,\n  getMatchups: getMatchups,\n  getSpecificMatchup: getSpecificMatchup\n};","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/node_modules/espn-ff-api-2/scoreboard.js"],"names":["espnRequest","require","getLeagueScoreboard","cookies","leagueId","season","url","requestToPromise","getMatchups","then","leagueData","scoreboard","matchups","getSpecificMatchup","teamLocation","teamName","filter","matchup","teams","team","teamNickname","map","score","wins","record","overallWins","losses","overallLosses","logoUrl","teamId","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,QAAtC,EAAgDC,MAAM,GAAG,IAAzD,EAA8D;AAC5D,MAAIC,GAAG,GAAG,0DAA0DF,QAA1D,GAAqE,YAArE,GAAoFC,MAA9F;AACA,SAAOL,WAAW,CAACO,gBAAZ,CAA6BD,GAA7B,EAAkCH,OAAlC,CAAP;AACD;;AAED,SAASK,WAAT,CAAqBL,OAArB,EAA8BC,QAA9B,EAAwCC,MAAM,GAAG,IAAjD,EAAsD;AACpD,SAAOH,mBAAmB,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,CAAnB,CACJI,IADI,CACCC,UAAU,IAAI;AAClB,WAAOA,UAAU,CAACC,UAAX,CAAsBC,QAA7B;AACD,GAHI,CAAP;AAID;;AAED,SAASC,kBAAT,CAA4BV,OAA5B,EAAqCC,QAArC,EAA+CU,YAA/C,EAA6DC,QAA7D,EAAuEV,MAAM,GAAG,IAAhF,EAAqF;AACnF,SAAOG,WAAW,CAACL,OAAD,EAAUC,QAAV,EAAoBC,MAApB,CAAX,CACJI,IADI,CACCG,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACI,MAAT,CAAgBC,OAAO,IAAI;AAChC,aAAQA,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBL,YAAtB,KAAuCA,YAAvC,IAAuDG,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBC,YAAtB,KAAuCL,QAA/F,IACCE,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBL,YAAtB,KAAuCA,YAAvC,IAAuDG,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBC,YAAtB,KAAuCL,QADtG;AAED,KAHM,CAAP;AAID,GANI,EAOJN,IAPI,CAOCQ,OAAO,IAAI;AACf,WAAOA,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAlB;AACD,GATI,EAUJT,IAVI,CAUCS,KAAK,IAAI;AACb,WAAOA,KAAK,CAACG,GAAN,CAAUF,IAAI,IAAI;AACvB,aAAO;AACCJ,QAAAA,QAAQ,EAAGI,IAAI,CAACA,IAAL,CAAUL,YAAV,GAAyB,GAAzB,GAA+BK,IAAI,CAACA,IAAL,CAAUC,YADrD;AAECE,QAAAA,KAAK,EAAMH,IAAI,CAACG,KAFjB;AAGCC,QAAAA,IAAI,EAAOJ,IAAI,CAACA,IAAL,CAAUK,MAAV,CAAiBC,WAH7B;AAICC,QAAAA,MAAM,EAAKP,IAAI,CAACA,IAAL,CAAUK,MAAV,CAAiBG,aAJ7B;AAKCC,QAAAA,OAAO,EAAIT,IAAI,CAACA,IAAL,CAAUS,OALtB;AAMCC,QAAAA,MAAM,EAAKV,IAAI,CAACU;AANjB,OAAP;AAQD,KATM,CAAP;AAUD,GArBI,CAAP;AAsBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,mBAAmB,EAAGA,mBADP;AAEfM,EAAAA,WAAW,EAAWA,WAFP;AAGfK,EAAAA,kBAAkB,EAAIA;AAHP,CAAjB","sourcesContent":["const espnRequest = require('./espn-request');\n\nfunction getLeagueScoreboard(cookies, leagueId, season = 2018){\n  let url = 'http://games.espn.com/ffl/api/v2/scoreboard?leagueId=' + leagueId + '&seasonId=' + season;\n  return espnRequest.requestToPromise(url, cookies);\n}\n\nfunction getMatchups(cookies, leagueId, season = 2018){\n  return getLeagueScoreboard(cookies, leagueId, season)\n    .then(leagueData => {\n      return leagueData.scoreboard.matchups;\n    });\n}\n\nfunction getSpecificMatchup(cookies, leagueId, teamLocation, teamName, season = 2018){\n  return getMatchups(cookies, leagueId, season)\n    .then(matchups => {\n      return matchups.filter(matchup => {\n        return (matchup.teams[0].team.teamLocation === teamLocation && matchup.teams[0].team.teamNickname === teamName) ||\n               (matchup.teams[1].team.teamLocation === teamLocation && matchup.teams[1].team.teamNickname === teamName);\n      });\n    })\n    .then(matchup => {\n      return matchup[0].teams;\n    })\n    .then(teams => {\n      return teams.map(team => {\n        return {\n                teamName : team.team.teamLocation + ' ' + team.team.teamNickname,\n                score    : team.score,\n                wins     : team.team.record.overallWins,\n                losses   : team.team.record.overallLosses,\n                logoUrl  : team.team.logoUrl,\n                teamId   : team.teamId\n              };\n      });\n    });\n}\n\nmodule.exports = {\n  getLeagueScoreboard : getLeagueScoreboard,\n  getMatchups         : getMatchups,\n  getSpecificMatchup  : getSpecificMatchup\n};\n"]},"metadata":{},"sourceType":"script"}
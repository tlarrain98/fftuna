{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlarr\\\\ffwebsite\\\\src\\\\components\\\\home\\\\SideStandings.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport StandingEntry from './StandingEntry.js';\nimport '../../css/Home.css';\nimport { Client, Team } from 'espn-fantasy-football-api/node';\nconst SID = '2020';\nconst LID = '434534';\nconst ffClient = new Client({\n  leagueId: LID\n});\n\nclass SideStandings extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  findOrder(data) {\n    //console.log(data);\n    let ordered = [];\n\n    for (const team in Object.entries(data)) {\n      console.log(data[team]);\n    }\n\n    return ordered;\n  }\n\n  getStandings() {\n    let standings = [];\n    ffClient.getTeamsAtWeek({\n      seasonId: SID,\n      scoringPeriodId: 18\n    }).then(response => {\n      standings = this.findOrder(response);\n    }).catch(error => {\n      console.log({\n        error\n      });\n    });\n    return standings;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidecard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"League Standings\"), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, \"Team\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, \"W\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, \"L\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, this.getStandings())))));\n  }\n\n}\n\nexport default SideStandings;","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/src/components/home/SideStandings.js"],"names":["React","Component","Table","Card","StandingEntry","Client","Team","SID","LID","ffClient","leagueId","SideStandings","constructor","props","findOrder","data","ordered","team","Object","entries","console","log","getStandings","standings","getTeamsAtWeek","seasonId","scoringPeriodId","then","response","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,oBAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,gCAA7B;AAEA,MAAMC,GAAG,GAAG,MAAZ;AACA,MAAMC,GAAG,GAAG,QAAZ;AAEA,MAAMC,QAAQ,GAAG,IAAIJ,MAAJ,CAAW;AAAEK,EAAAA,QAAQ,EAAEF;AAAZ,CAAX,CAAjB;;AAEA,MAAMG,aAAN,SAA4BV,SAA5B,CAAsC;AAElCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ;AACA,QAAIC,OAAO,GAAG,EAAd;;AAEA,SAAI,MAAMC,IAAV,IAAkBC,MAAM,CAACC,OAAP,CAAeJ,IAAf,CAAlB,EAAwC;AACpCK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,IAAD,CAAhB;AACH;;AAED,WAAOD,OAAP;AACH;;AAEDM,EAAAA,YAAY,GAAG;AAEX,QAAIC,SAAS,GAAG,EAAhB;AAEAd,IAAAA,QAAQ,CAACe,cAAT,CAAwB;AAAEC,MAAAA,QAAQ,EAAElB,GAAZ;AAAiBmB,MAAAA,eAAe,EAAE;AAAlC,KAAxB,EAAgEC,IAAhE,CAAqEC,QAAQ,IAAI;AAC7EL,MAAAA,SAAS,GAAG,KAAKT,SAAL,CAAec,QAAf,CAAZ;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAES,QAAAA;AAAF,OAAZ;AACH,KAJD;AAMA,WAAOP,SAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,YAAL,EADL,CANJ,CADJ,CAFJ,CADJ,CADJ;AAmBH;;AAlDiC;;AAqDtC,eAAeX,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Card from 'react-bootstrap/Card';\r\nimport StandingEntry from './StandingEntry.js';\r\nimport '../../css/Home.css';\r\nimport { Client, Team } from 'espn-fantasy-football-api/node';\r\n\r\nconst SID = '2020';\r\nconst LID = '434534';\r\n\r\nconst ffClient = new Client({ leagueId: LID });\r\n\r\nclass SideStandings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    findOrder(data) {\r\n        //console.log(data);\r\n        let ordered = [];\r\n\r\n        for(const team in Object.entries(data)) {\r\n            console.log(data[team]);\r\n        }\r\n\r\n        return ordered;\r\n    }\r\n\r\n    getStandings() {\r\n\r\n        let standings = [];\r\n\r\n        ffClient.getTeamsAtWeek({ seasonId: SID, scoringPeriodId: 18 }).then(response => {\r\n            standings = this.findOrder(response);\r\n        }).catch(error => {\r\n            console.log({ error });\r\n        });\r\n\r\n        return standings;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidecard\">\r\n                <Card>\r\n                    <Card.Header>League Standings</Card.Header>\r\n                    <Card.Body>\r\n                        <Table size=\"sm\">\r\n                            <thead>\r\n                                <th>Team</th>\r\n                                <th>W</th>\r\n                                <th>L</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.getStandings()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideStandings;"]},"metadata":{},"sourceType":"module"}
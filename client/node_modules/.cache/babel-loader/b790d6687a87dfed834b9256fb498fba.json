{"ast":null,"code":"const espnRequest = require('./espn-request'); // set NFL team names by ID\n\n\nconst nflTeams = {\n  '22': 'Arizona Cardinals',\n  '1': 'Atlanta Falcons',\n  '33': 'Baltimore Ravens',\n  '2': 'Buffalo Bills',\n  '29': 'Carolina Panthers',\n  '3': 'Chicago Bears',\n  '4': 'Cincinnati Bengals',\n  '5': 'Cleveland Browns',\n  '6': 'Dallas Cowboys',\n  '7': 'Denver Broncos',\n  '8': 'Detroit Lions',\n  '9': 'Green Bay Packers',\n  '34': 'Houston Texans',\n  '11': 'Indianapolis Colts',\n  '30': 'Jacksonville Jaguars',\n  '12': 'Kansas City Chiefs',\n  '24': 'Los Angeles Chargers',\n  '14': 'Los Angeles Rams',\n  '15': 'Miami Dolphins',\n  '16': 'Minnesota Vikings',\n  '17': 'New England Patriots',\n  '18': 'New Orleans Saints',\n  '19': 'New York Giants',\n  '20': 'New York Jets',\n  '13': 'Oakland Raiders',\n  '21': 'Philadelphia Eagles',\n  '23': 'Pittsburgh Steelers',\n  '25': 'San Francisco 49ers',\n  '26': 'Seattle Seahawks',\n  '27': 'Tampa Bay Buccaneers',\n  '10': 'Tennessee Titans',\n  '28': 'Washington Redskins',\n  '-1': 'Bye'\n};\nconst nflTeamsAbbrev = {\n  '22': 'Ari',\n  '1': 'Atl',\n  '33': 'Bal',\n  '2': 'Buf',\n  '29': 'Car',\n  '3': 'Chi',\n  '4': 'Cin',\n  '5': 'Cle',\n  '6': 'Dal',\n  '7': 'Den',\n  '8': 'Det',\n  '9': 'GB',\n  '34': 'Hou',\n  '11': 'Ind',\n  '30': 'Jax',\n  '12': 'KC',\n  '24': 'LAC',\n  '14': 'LAR',\n  '15': 'Mia',\n  '16': 'Min',\n  '17': 'NE',\n  '18': 'NO',\n  '19': 'NYG',\n  '20': 'NYJ',\n  '13': 'Oak',\n  '21': 'Phi',\n  '23': 'Pit',\n  '25': 'SF',\n  '26': 'Sea',\n  '27': 'TB',\n  '10': 'Ten',\n  '28': 'Wsh',\n  '-1': 'Bye'\n}; // set player positions\n\nconst playerPositions = {\n  '0, 20': 'QB',\n  '2, 23, 20': 'RB',\n  '4, 23, 20': 'WR',\n  '6, 23, 20': 'TE',\n  '16, 20': 'Def',\n  '17, 20': 'K'\n}; // set lineup positions\n\nconst lineupPositions = {\n  '0': 'QB',\n  '2': 'RB',\n  '4': 'WR',\n  '6': 'TE',\n  '16': 'Def',\n  '17': 'K',\n  '20': 'Bench',\n  '23': 'Flex'\n};\n\nfunction getBoxScore(cookies, leagueId, teamId, scoringPeriodId, season = 2018) {\n  let url = 'http://games.espn.com/ffl/api/v2/boxscore?leagueId=' + leagueId + '&teamId=' + teamId + '&scoringPeriodId=' + scoringPeriodId + '&seasonId=' + season;\n  return espnRequest.requestToPromise(url, cookies);\n}\n\nfunction getLineups(cookies, leagueId, teamId, scoringPeriodId, season = 2018) {\n  return getBoxScore(cookies, leagueId, teamId, scoringPeriodId, season).then(lineups => {\n    return lineups.boxscore.teams;\n  });\n}\n\nfunction getMatchupLineups(cookies, leagueId, teamId, scoringPeriodId, season = 2018) {\n  return getLineups(cookies, leagueId, teamId, scoringPeriodId, season).then(teams => {\n    return teams.map(team => {\n      return {\n        teamName: team.team.teamLocation + ' ' + team.team.teamNickname,\n        teamAbbrev: team.team.teamAbbrev,\n        logoUrl: team.team.logoUrl,\n        teamId: team.teamId,\n        projectedPoints: team.appliedActiveProjectedTotal,\n        realPoints: team.appliedActiveRealTotal,\n        players: team.slots\n      };\n    });\n  });\n}\n\nfunction getSingleTeamLineup(cookies, leagueId, teamId, scoringPeriodId, season = 2018) {\n  return getLineups(cookies, leagueId, teamId, scoringPeriodId, season).then(teams => {\n    return teams.filter(function (obj) {\n      return obj.team.teamId == teamId;\n    });\n  }).then(team => {\n    return team.map(team => {\n      return {\n        teamName: team.team.teamLocation + ' ' + team.team.teamNickname,\n        teamAbbrev: team.team.teamAbbrev,\n        logoUrl: team.team.logoUrl,\n        teamId: team.teamId,\n        projectedPoints: team.appliedActiveProjectedTotal,\n        realPoints: team.appliedActiveRealTotal,\n        players: team.slots\n      };\n    });\n  });\n}\n\nfunction getSingleTeamPlayers(cookies, leagueId, teamId, scoringPeriodId, season = 2018) {\n  return getSingleTeamLineup(cookies, leagueId, teamId, scoringPeriodId, season).then(team => {\n    return team[0].players;\n  }).then(players => {\n    return players.map(player => {\n      return {\n        playerName: player.player.firstName + ' ' + player.player.lastName,\n        playerTeamId: teamId,\n        playerPosition: playerPositions[player.player.eligibleSlotCategoryIds.join(', ')],\n        lineupPosition: lineupPositions[player.slotCategoryId.toString()],\n        nflTeam: nflTeams[player.player.proTeamId.toString()],\n        nflTeamAbbrev: nflTeamsAbbrev[player.player.proTeamId.toString()],\n        nflTeamOpp: nflTeams[player.opponentProTeamId.toString()],\n        nflTeamOppAbbrev: nflTeamsAbbrev[player.opponentProTeamId.toString()],\n        projectedPoints: player.currentPeriodProjectedStats.appliedStatTotal,\n        realPoints: player.currentPeriodRealStats.appliedStatTotal || 0\n      };\n    });\n  });\n}\n\nmodule.exports = {\n  getBoxScore: getBoxScore,\n  getLineups: getLineups,\n  getMatchupLineups: getMatchupLineups,\n  getSingleTeamLineup: getSingleTeamLineup,\n  getSingleTeamPlayers: getSingleTeamPlayers\n};","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/node_modules/espn-ff-api-2/boxscores.js"],"names":["espnRequest","require","nflTeams","nflTeamsAbbrev","playerPositions","lineupPositions","getBoxScore","cookies","leagueId","teamId","scoringPeriodId","season","url","requestToPromise","getLineups","then","lineups","boxscore","teams","getMatchupLineups","map","team","teamName","teamLocation","teamNickname","teamAbbrev","logoUrl","projectedPoints","appliedActiveProjectedTotal","realPoints","appliedActiveRealTotal","players","slots","getSingleTeamLineup","filter","obj","getSingleTeamPlayers","player","playerName","firstName","lastName","playerTeamId","playerPosition","eligibleSlotCategoryIds","join","lineupPosition","slotCategoryId","toString","nflTeam","proTeamId","nflTeamAbbrev","nflTeamOpp","opponentProTeamId","nflTeamOppAbbrev","currentPeriodProjectedStats","appliedStatTotal","currentPeriodRealStats","module","exports"],"mappings":"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","sourcesContent":["const espnRequest = require('./espn-request');\n\n// set NFL team names by ID\nconst nflTeams = {\n  '22': 'Arizona Cardinals',\n  '1' : 'Atlanta Falcons',\n  '33': 'Baltimore Ravens',\n  '2' : 'Buffalo Bills',\n  '29': 'Carolina Panthers',\n  '3' : 'Chicago Bears',\n  '4' : 'Cincinnati Bengals',\n  '5' : 'Cleveland Browns',\n  '6' : 'Dallas Cowboys',\n  '7' : 'Denver Broncos',\n  '8' : 'Detroit Lions',\n  '9' : 'Green Bay Packers',\n  '34': 'Houston Texans',\n  '11': 'Indianapolis Colts',\n  '30': 'Jacksonville Jaguars',\n  '12': 'Kansas City Chiefs',\n  '24': 'Los Angeles Chargers',\n  '14': 'Los Angeles Rams',\n  '15': 'Miami Dolphins',\n  '16': 'Minnesota Vikings',\n  '17': 'New England Patriots',\n  '18': 'New Orleans Saints',\n  '19': 'New York Giants',\n  '20': 'New York Jets',\n  '13': 'Oakland Raiders',\n  '21': 'Philadelphia Eagles',\n  '23': 'Pittsburgh Steelers',\n  '25': 'San Francisco 49ers',\n  '26': 'Seattle Seahawks',\n  '27': 'Tampa Bay Buccaneers',\n  '10': 'Tennessee Titans',\n  '28': 'Washington Redskins',\n  '-1': 'Bye'\n};\n\nconst nflTeamsAbbrev = {\n  '22': 'Ari',\n  '1' : 'Atl',\n  '33': 'Bal',\n  '2' : 'Buf',\n  '29': 'Car',\n  '3' : 'Chi',\n  '4' : 'Cin',\n  '5' : 'Cle',\n  '6' : 'Dal',\n  '7' : 'Den',\n  '8' : 'Det',\n  '9' : 'GB',\n  '34': 'Hou',\n  '11': 'Ind',\n  '30': 'Jax',\n  '12': 'KC',\n  '24': 'LAC',\n  '14': 'LAR',\n  '15': 'Mia',\n  '16': 'Min',\n  '17': 'NE',\n  '18': 'NO',\n  '19': 'NYG',\n  '20': 'NYJ',\n  '13': 'Oak',\n  '21': 'Phi',\n  '23': 'Pit',\n  '25': 'SF',\n  '26': 'Sea',\n  '27': 'TB',\n  '10': 'Ten',\n  '28': 'Wsh',\n  '-1': 'Bye'\n}\n\n// set player positions\nconst playerPositions = {\n  '0, 20'    : 'QB',\n  '2, 23, 20': 'RB',\n  '4, 23, 20': 'WR',\n  '6, 23, 20': 'TE',\n  '16, 20'   : 'Def',\n  '17, 20'   : 'K'\n};\n\n// set lineup positions\nconst lineupPositions = {\n  '0' : 'QB',\n  '2' : 'RB',\n  '4' : 'WR',\n  '6' : 'TE',\n  '16': 'Def',\n  '17': 'K',\n  '20': 'Bench',\n  '23': 'Flex'\n};\n\nfunction getBoxScore(cookies, leagueId, teamId, scoringPeriodId, season = 2018){\n  let url = 'http://games.espn.com/ffl/api/v2/boxscore?leagueId=' + leagueId + '&teamId=' + teamId + '&scoringPeriodId=' + scoringPeriodId + '&seasonId=' + season;\n  return espnRequest.requestToPromise(url, cookies);\n}\n\nfunction getLineups(cookies, leagueId, teamId, scoringPeriodId, season = 2018){\n  return getBoxScore(cookies, leagueId, teamId, scoringPeriodId, season)\n    .then(lineups => {\n      return lineups.boxscore.teams;\n    });\n}\n\nfunction getMatchupLineups(cookies, leagueId, teamId, scoringPeriodId, season = 2018){\n  return getLineups(cookies, leagueId, teamId, scoringPeriodId, season)\n    .then(teams => {\n      return teams.map(team => {\n        return {\n          teamName        : team.team.teamLocation + ' ' + team.team.teamNickname,\n          teamAbbrev      : team.team.teamAbbrev,\n          logoUrl         : team.team.logoUrl,\n          teamId          : team.teamId,\n          projectedPoints : team.appliedActiveProjectedTotal,\n          realPoints      : team.appliedActiveRealTotal,\n          players         : team.slots\n        };\n      });\n    });\n}\n\nfunction getSingleTeamLineup(cookies, leagueId, teamId, scoringPeriodId, season = 2018){\n  return getLineups(cookies, leagueId, teamId, scoringPeriodId, season)\n    .then(teams => {\n      return teams.filter(function(obj){\n        return obj.team.teamId == teamId;\n      });\n    })\n    .then(team => {\n      return team.map(team => {\n        return {\n          teamName        : team.team.teamLocation + ' ' + team.team.teamNickname,\n          teamAbbrev      : team.team.teamAbbrev,\n          logoUrl         : team.team.logoUrl,\n          teamId          : team.teamId,\n          projectedPoints : team.appliedActiveProjectedTotal,\n          realPoints      : team.appliedActiveRealTotal,\n          players         : team.slots\n        };\n      });\n    });\n}\n\nfunction getSingleTeamPlayers(cookies, leagueId, teamId, scoringPeriodId, season = 2018){\n  return getSingleTeamLineup(cookies, leagueId, teamId, scoringPeriodId, season)\n    .then(team => {\n      return team[0].players;\n    })\n    .then(players => {\n      return players.map(player => {\n        return {\n          playerName        : player.player.firstName + ' ' + player.player.lastName,\n          playerTeamId      : teamId,\n          playerPosition    : playerPositions[player.player.eligibleSlotCategoryIds.join(', ')],\n          lineupPosition    : lineupPositions[player.slotCategoryId.toString()],\n          nflTeam           : nflTeams[player.player.proTeamId.toString()],\n          nflTeamAbbrev     : nflTeamsAbbrev[player.player.proTeamId.toString()],\n          nflTeamOpp        : nflTeams[player.opponentProTeamId.toString()],\n          nflTeamOppAbbrev  : nflTeamsAbbrev[player.opponentProTeamId.toString()],\n          projectedPoints   : player.currentPeriodProjectedStats.appliedStatTotal,\n          realPoints        : player.currentPeriodRealStats.appliedStatTotal || 0\n        };\n      });\n    });\n}\n\nmodule.exports = {\n  getBoxScore          : getBoxScore,\n  getLineups           : getLineups,\n  getMatchupLineups    : getMatchupLineups,\n  getSingleTeamLineup  : getSingleTeamLineup,\n  getSingleTeamPlayers : getSingleTeamPlayers\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlarr\\\\ffwebsite\\\\src\\\\components\\\\home\\\\SideStandings.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport StandingEntry from './StandingEntry.js';\nimport '../../css/Home.css';\nimport { Client } from 'espn-fantasy-football-api/node';\nconst LID = '434534';\nconst ffClient = new Client({\n  leagueId: LID\n}); // class SideStandings extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             data: '',\n//             SID: '2020',\n//         }\n//     }\n//     componentDidMount() {\n//         this.getData();\n//     }\n//     async getData() {\n//         const response = await ffClient.getTeamsAtWeek({ seasonId: this.state.SID, scoringPeriodId: 18 });\n//         this.setState({data: response});\n//     }\n//     setOrder() {\n//         let ordered = [];\n//         for(const team in Object.entries(this.state.data)) {\n//             ordered[this.state.data[team].playoffSeed - 1] = this.state.data[team];\n//         }\n//         return ordered;\n//     }\n//     displayStandings() {\n//         let standings = [];\n//         let ordered = this.setOrder();\n//         for(let i = 0; i < ordered.length; i++) {\n//             standings.push(\n//                 <StandingEntry name={ordered[i].name}\n//                     wins={ordered[i].wins}\n//                     losses={ordered[i].losses}/>\n//             )\n//         }\n//         return standings;\n//     }\n//     render() {\n//         return (\n//             <div className=\"standings\">\n//                 <Table size=\"sm\" striped>\n//                             <thead>\n//                                 <th className=\"leftalign\">Team</th>\n//                                 <th className=\"leftalign\">W</th>\n//                                 <th className=\"leftalign\">L</th>\n//                             </thead>\n//                             <tbody className=\"leftalign\">\n//                                 {this.displayStandings()}\n//                             </tbody>\n//                 </Table>\n//             </div>\n//         )\n//     }\n// }\n// export default SideStandings;\n\nconst SideStandings = props => {\n  const [data, setData] = useState('');\n  const [SID, setSID] = useState('2020');\n  useEffect(() => {\n    getData();\n  });\n\n  const getData = async () => {\n    const response = await ffClient.getTeamsAtWeek({\n      seasonId: SID,\n      scoringPeriodId: 18\n    });\n    setData(response);\n  };\n\n  const setOrder = () => {\n    let ordered = [];\n    console.log(data);\n\n    for (const team in Object.entries(data)) {\n      ordered[data[team].playoffSeed - 1] = data[team];\n    }\n\n    return ordered;\n  };\n\n  const displayStandings = () => {\n    let standings = [];\n    let ordered = setOrder();\n\n    for (let i = 0; i < ordered.length; i++) {\n      standings.push( /*#__PURE__*/React.createElement(StandingEntry, {\n        name: ordered[i].name,\n        wins: ordered[i].wins,\n        losses: ordered[i].losses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return standings;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"standings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"sm\",\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"leftalign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Team\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"leftalign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"W\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"leftalign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"L\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"leftalign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, displayStandings())));\n};\n\nexport default SideStandings;","map":{"version":3,"sources":["C:/Users/tlarr/ffwebsite/src/components/home/SideStandings.js"],"names":["React","useState","useEffect","Table","Card","StandingEntry","Client","LID","ffClient","leagueId","SideStandings","props","data","setData","SID","setSID","getData","response","getTeamsAtWeek","seasonId","scoringPeriodId","setOrder","ordered","console","log","team","Object","entries","playoffSeed","displayStandings","standings","i","length","push","name","wins","losses"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Card from 'react-bootstrap/Card';\r\nimport StandingEntry from './StandingEntry.js';\r\nimport '../../css/Home.css';\r\nimport { Client } from 'espn-fantasy-football-api/node';\r\n\r\nconst LID = '434534';\r\nconst ffClient = new Client({ leagueId: LID });\r\n\r\n// class SideStandings extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             data: '',\r\n//             SID: '2020',\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.getData();\r\n//     }\r\n\r\n//     async getData() {\r\n//         const response = await ffClient.getTeamsAtWeek({ seasonId: this.state.SID, scoringPeriodId: 18 });\r\n\r\n//         this.setState({data: response});\r\n//     }\r\n\r\n//     setOrder() {\r\n//         let ordered = [];\r\n\r\n//         for(const team in Object.entries(this.state.data)) {\r\n//             ordered[this.state.data[team].playoffSeed - 1] = this.state.data[team];\r\n//         }\r\n\r\n//         return ordered;\r\n//     }\r\n\r\n//     displayStandings() {\r\n//         let standings = [];\r\n//         let ordered = this.setOrder();\r\n//         for(let i = 0; i < ordered.length; i++) {\r\n//             standings.push(\r\n//                 <StandingEntry name={ordered[i].name}\r\n//                     wins={ordered[i].wins}\r\n//                     losses={ordered[i].losses}/>\r\n//             )\r\n//         }\r\n\r\n//         return standings;\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"standings\">\r\n//                 <Table size=\"sm\" striped>\r\n//                             <thead>\r\n//                                 <th className=\"leftalign\">Team</th>\r\n//                                 <th className=\"leftalign\">W</th>\r\n//                                 <th className=\"leftalign\">L</th>\r\n//                             </thead>\r\n//                             <tbody className=\"leftalign\">\r\n//                                 {this.displayStandings()}\r\n//                             </tbody>\r\n//                 </Table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default SideStandings;\r\n\r\nconst SideStandings = (props) => {\r\n    \r\n    const [data, setData] = useState('');\r\n    const [SID, setSID] = useState('2020');\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    });\r\n\r\n    const getData = async () => {\r\n        const response = await ffClient.getTeamsAtWeek({ seasonId: SID, scoringPeriodId: 18 });\r\n\r\n        setData(response);\r\n    }\r\n\r\n    const setOrder = () => {\r\n        let ordered = [];\r\n\r\n        console.log(data)\r\n\r\n        for (const team in Object.entries(data)) {\r\n            ordered[data[team].playoffSeed - 1] = data[team];\r\n        }\r\n\r\n        return ordered;\r\n    }\r\n\r\n    const displayStandings = () => {\r\n        let standings = [];\r\n        let ordered = setOrder();\r\n        for (let i = 0; i < ordered.length; i++) {\r\n            standings.push(\r\n                <StandingEntry name={ordered[i].name}\r\n                    wins={ordered[i].wins}\r\n                    losses={ordered[i].losses} />\r\n            )\r\n        }\r\n\r\n        return standings;\r\n    }\r\n\r\n    return (\r\n        <div className=\"standings\">\r\n            <Table size=\"sm\" striped>\r\n                <thead>\r\n                    <th className=\"leftalign\">Team</th>\r\n                    <th className=\"leftalign\">W</th>\r\n                    <th className=\"leftalign\">L</th>\r\n                </thead>\r\n                <tbody className=\"leftalign\">\r\n                    {displayStandings()}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideStandings;"]},"metadata":{},"sourceType":"module"}